{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///src/app/components/model-display/model-display.component.ts","webpack:///src/app/components/model-display/model-display.component.html","webpack:///src/app/paths/home/home-component/home.component.ts","webpack:///src/app/paths/home/home-component/home.component.html","webpack:///src/app/paths/home/home.module.ts"],"names":["DataSource","isDataSource","value","connect","ArrayDataSource","_data","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","next","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","ɵfac","UniqueSelectionDispatcher_Factory","t","ɵprov","factory","token","providedIn","type","args","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ScrollStrategyOptions_Factory","ctorParameters","undefined","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","_keydownEvents","observers","_isAttached","addEventListener","index","indexOf","splice","removeEventListener","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","provide","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","_platform","container","_containerElement","parentNode","removeChild","_createContainer","isBrowser","containerClass","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","asObservable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","subscription","children","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Element","destination","hasOwnProperty","input","split","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","get","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","changes","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","preventDefault","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","emit","_createOverlay","CdkConnectedOverlay_Factory","inputs","outputs","features","propDecorators","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","ɵmod","ɵinj","OverlayModule_Factory","providers","imports","ngJitMode","declarations","exports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","Map","set","elementScrolled","scrollableReference","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","_","deregister","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","doc","_getDocument","defaultView","scrollableElement","_getWindow","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","options","el","_applyScrollToOptions","scrollTo","scrollTop","scrollLeft","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","node","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","onTouched","setProperty","isDisabled","CheckboxControlValueAccessor_Factory","CheckboxControlValueAccessor_HostBindings","CheckboxControlValueAccessor_change_HostBindingHandler","$event","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","normalizedValue","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","_handleInput","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","_compositionStart","DefaultValueAccessor_compositionend_HostBindingHandler","_compositionEnd","Boolean","AbstractControlDirective","control","reset","errorCode","path","hasError","getError","valid","invalid","pending","disabled","enabled","errors","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","AbstractControlDirective_Factory","ControlContainer","ControlContainer_Factory","ɵControlContainer_BaseFactory","unimplemented","NgControl","arguments","_parent","valueAccessor","_rawValidators","_rawAsyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","NgControlStatus","NgControlStatus_Factory","NgControlStatus_HostBindings","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","isNaN","minLength","maxLength","pattern","nullValidator","regex","regexStr","charAt","RegExp","toString","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","observables","_executeAsyncValidators","toObservable","o","r","obs","v","arrayOfErrors","res","normalizeValidator","validator","validate","c","normalizeAsyncValidator","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","_registry","_checkName","_state","_fn","writeValue","formControlName","_throwNameError","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","RANGE_VALUE_ACCESSOR","RangeValueAccessor","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","ReactiveErrors","console","warn","directiveName","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","_extractId","valueString","_optionMap","_idCounter","_compareWith","is","_getOptionId","_getOptionValue","JSON","stringify","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","compareWith","NgSelectOption","_element","_select","_registerOption","_setElementValue","NgSelectOption_Factory","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","_extractId$1","HTMLCollection","optionSelectedStateSetter","isArray","ids","opt","_setSelected","selectedOptions","val","_value","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","controlPath","setUpControl","_throwError","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","cleanUpControl","registerOnChange","_noControlError","registerOnTouched","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","isFirstChange","BUILTIN_ACCESSORS","isBuiltInAccessor","a","constructor","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","list","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","AbstractControl","_onCollectionChange","_onDisabledChange","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","markAsPending","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","parentDirty","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","child","k","_reduceValue","initValue","_registerControl","formDirectiveProvider","NgForm","ɵ0","resolvedPromise","submitted","_directives","ngSubmit","_findContainer","removeControl","group","resetForm","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","onSubmit","NgForm_reset_HostBindingHandler","onReset","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractFormGroupDirective_Factory","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","formControlBinding","NgModel","ɵ0$1","resolvedPromise$1","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NgModel_Factory","ɵNgNoValidate","ɵNgNoValidate_Factory","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding$1","FormControlDirective","_ngModelWarningConfig","_isControlChanged","disabledAttrWarning","FormControlDirective_Factory","String","formDirectiveProvider$1","FormGroupDirective","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_oldForm","sync","async","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","addFormArray","removeFormArray","arrayParentException","getFormArray","FormArrayName_Factory","controlNameBinding","FormControlName","_added","updateModel","ngModelGroupException","controlParentException","FormControlName_Factory","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","required","_required","RequiredValidator_Factory","RequiredValidator_HostBindings","requiredTrue","CheckboxRequiredValidator_Factory","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","_enabled","email","EmailValidator_Factory","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","minlength","_validator","parseInt","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵInternalFormsSharedModule_Factory","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","_createControl","controlConfig","FormBuilder_Factory","VERSION","FormsModule","FormsModule_Factory","ReactiveFormsModule","ngModule","useValue","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","_c2","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","placeholder","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","error","setDescribedByIds","labelEl","textContent","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","getRootNode","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","animation","descendants","animations","MatFormFieldModule","MatFormFieldModule_Factory","MatSelect_span_4_Template","ctx_r2","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","tabIndex","_liveAnnouncer","defaults","_panelOpen","_scrollTop","o1","o2","_uid","_destroy","_onTouched","_optionIds","_positions","_disableOptionCentering","_focused","ariaLabel","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","_closedStream","selectionChange","valueChange","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","_triggerRect","trigger","_initKeyManager","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","previouslyFocusedIndex","activeItemIndex","shiftKey","_calculateOverlayOffsetX","panel","_selectValue","_sortValues","correspondingOption","setActiveItem","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","_propagateChanges","toArray","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","_getItemHeight","result","current","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_getAriaLabel","paddingWidth","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_ariaDescribedby","_placeholder","_id","reverse","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","_getAriaActiveDescendant","disableRipple","errorStateMatcher","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","MatSelectModule","MatSelectModule_Factory","changeUnitSize","removeUnit","ModelDisplayComponent","warhammerService","templateUrl","styleUrls","HomeComponent","http","armyList","hqChoices","eliteChoices","troopChoices","fastAttackChoices","heavyChoices","flyerChoices","transportChoices","rangedWeapons","meleeWeapons","equipment","spaceMarineHq","spaceMarineTroops","getData","unitType","gearOptions","dataOptions","potentialItem","nameA","toUpperCase","nameB","listId","totalArmyPoints","updateArmyTotal","oldIndex","findIndex","squadSize","addUnit","HomeModule","forChild"],"mappings":"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","file":"paths-home-home-module-es5.js","sourcesContent":["import { isObservable, of, Subject } from 'rxjs';\nimport { ɵɵdefineInjectable, Injectable } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nlet UniqueSelectionDispatcher = /** @class */ (() => {\n    class UniqueSelectionDispatcher {\n        constructor() {\n            this._listeners = [];\n        }\n        /**\n         * Notify other items that selection for the given name has been set.\n         * @param id ID of the item.\n         * @param name Name of the item.\n         */\n        notify(id, name) {\n            for (let listener of this._listeners) {\n                listener(id, name);\n            }\n        }\n        /**\n         * Listen for future changes to item selection.\n         * @return Function used to deregister listener\n         */\n        listen(listener) {\n            this._listeners.push(listener);\n            return () => {\n                this._listeners = this._listeners.filter((registered) => {\n                    return listener !== registered;\n                });\n            };\n        }\n        ngOnDestroy() {\n            this._listeners = [];\n        }\n    }\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n    UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n    return UniqueSelectionDispatcher;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nlet ScrollStrategyOptions = /** @class */ (() => {\n    class ScrollStrategyOptions {\n        constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n            this._scrollDispatcher = _scrollDispatcher;\n            this._viewportRuler = _viewportRuler;\n            this._ngZone = _ngZone;\n            /** Do nothing on scroll. */\n            this.noop = () => new NoopScrollStrategy();\n            /**\n             * Close the overlay as soon as the user scrolls.\n             * @param config Configuration to be used inside the scroll strategy.\n             */\n            this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n            /** Block scrolling. */\n            this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n            /**\n             * Update the overlay's position on scroll.\n             * @param config Configuration to be used inside the scroll strategy.\n             * Allows debouncing the reposition calls.\n             */\n            this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n            this._document = document;\n        }\n    }\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n    ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n    ScrollStrategyOptions.ctorParameters = () => [\n        { type: ScrollDispatcher },\n        { type: ViewportRuler },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ScrollStrategyOptions;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nlet ConnectedOverlayPositionChange = /** @class */ (() => {\n    class ConnectedOverlayPositionChange {\n        constructor(\n        /** The position used as a result of this change. */\n        connectionPair, \n        /** @docs-private */\n        scrollableViewProperties) {\n            this.connectionPair = connectionPair;\n            this.scrollableViewProperties = scrollableViewProperties;\n        }\n    }\n    ConnectedOverlayPositionChange.ctorParameters = () => [\n        { type: ConnectionPositionPair },\n        { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n    ];\n    return ConnectedOverlayPositionChange;\n})();\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet OverlayKeyboardDispatcher = /** @class */ (() => {\n    class OverlayKeyboardDispatcher {\n        constructor(document) {\n            /** Currently attached overlays in the order they were attached. */\n            this._attachedOverlays = [];\n            /** Keyboard event listener that will be attached to the body. */\n            this._keydownListener = (event) => {\n                const overlays = this._attachedOverlays;\n                for (let i = overlays.length - 1; i > -1; i--) {\n                    // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                    // We want to target the most recent overlay, rather than trying to match where the event came\n                    // from, because some components might open an overlay, but keep focus on a trigger element\n                    // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                    // because we don't want overlays that don't handle keyboard events to block the ones below\n                    // them that do.\n                    if (overlays[i]._keydownEvents.observers.length > 0) {\n                        overlays[i]._keydownEvents.next(event);\n                        break;\n                    }\n                }\n            };\n            this._document = document;\n        }\n        ngOnDestroy() {\n            this._detach();\n        }\n        /** Add a new overlay to the list of attached overlay refs. */\n        add(overlayRef) {\n            // Ensure that we don't get the same overlay multiple times.\n            this.remove(overlayRef);\n            // Lazily start dispatcher once first overlay is added\n            if (!this._isAttached) {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n                this._isAttached = true;\n            }\n            this._attachedOverlays.push(overlayRef);\n        }\n        /** Remove an overlay from the list of attached overlay refs. */\n        remove(overlayRef) {\n            const index = this._attachedOverlays.indexOf(overlayRef);\n            if (index > -1) {\n                this._attachedOverlays.splice(index, 1);\n            }\n            // Remove the global listener once there are no more overlays.\n            if (this._attachedOverlays.length === 0) {\n                this._detach();\n            }\n        }\n        /** Detaches the global keyboard event listener. */\n        _detach() {\n            if (this._isAttached) {\n                this._document.body.removeEventListener('keydown', this._keydownListener);\n                this._isAttached = false;\n            }\n        }\n    }\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n    OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n    OverlayKeyboardDispatcher.ctorParameters = () => [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return OverlayKeyboardDispatcher;\n})();\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nlet OverlayContainer = /** @class */ (() => {\n    class OverlayContainer {\n        constructor(document, \n        /**\n         * @deprecated `platform` parameter to become required.\n         * @breaking-change 10.0.0\n         */\n        _platform) {\n            this._platform = _platform;\n            this._document = document;\n        }\n        ngOnDestroy() {\n            const container = this._containerElement;\n            if (container && container.parentNode) {\n                container.parentNode.removeChild(container);\n            }\n        }\n        /**\n         * This method returns the overlay container element. It will lazily\n         * create the element the first time  it is called to facilitate using\n         * the container in non-browser environments.\n         * @returns the container element\n         */\n        getContainerElement() {\n            if (!this._containerElement) {\n                this._createContainer();\n            }\n            return this._containerElement;\n        }\n        /**\n         * Create the overlay container element, which is simply a div\n         * with the 'cdk-overlay-container' class on the document body.\n         */\n        _createContainer() {\n            // @breaking-change 10.0.0 Remove null check for `_platform`.\n            const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n            const containerClass = 'cdk-overlay-container';\n            if (isBrowser || isTestEnvironment) {\n                const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                    `.${containerClass}[platform=\"test\"]`);\n                // Remove any old containers from the opposite platform.\n                // This can happen when transitioning from the server to the client.\n                for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                    oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n                }\n            }\n            const container = this._document.createElement('div');\n            container.classList.add(containerClass);\n            // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n            // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n            // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n            // To mitigate the problem we made it so that only containers from a different platform are\n            // cleared, but the side-effect was that people started depending on the overly-aggressive\n            // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n            // module which does the cleanup, we try to detect that we're in a test environment and we\n            // always clear the container. See #17006.\n            // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n            if (isTestEnvironment) {\n                container.setAttribute('platform', 'test');\n            }\n            else if (!isBrowser) {\n                container.setAttribute('platform', 'server');\n            }\n            this._document.body.appendChild(container);\n            this._containerElement = container;\n        }\n    }\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n    OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n    OverlayContainer.ctorParameters = () => [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n    return OverlayContainer;\n})();\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, \n    // @breaking-change 8.0.0 `_location` parameter to be made required.\n    _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents.asObservable();\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach(pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        });\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /** Whether the we're dealing with an RTL context */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Emits an event when the connection point changes. */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nlet OverlayPositionBuilder = /** @class */ (() => {\n    class OverlayPositionBuilder {\n        constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n            this._viewportRuler = _viewportRuler;\n            this._document = _document;\n            this._platform = _platform;\n            this._overlayContainer = _overlayContainer;\n        }\n        /**\n         * Creates a global position strategy.\n         */\n        global() {\n            return new GlobalPositionStrategy();\n        }\n        /**\n         * Creates a relative position strategy.\n         * @param elementRef\n         * @param originPos\n         * @param overlayPos\n         * @deprecated Use `flexibleConnectedTo` instead.\n         * @breaking-change 8.0.0\n         */\n        connectedTo(elementRef, originPos, overlayPos) {\n            return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n        }\n        /**\n         * Creates a flexible position strategy.\n         * @param origin Origin relative to which to position the overlay.\n         */\n        flexibleConnectedTo(origin) {\n            return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n        }\n    }\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n    OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n    OverlayPositionBuilder.ctorParameters = () => [\n        { type: ViewportRuler },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform },\n        { type: OverlayContainer }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n    return OverlayPositionBuilder;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nlet Overlay = /** @class */ (() => {\n    class Overlay {\n        constructor(\n        /** Scrolling strategies that can be used when creating an overlay. */\n        scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, \n        // @breaking-change 8.0.0 `_location` parameter to be made required.\n        _location) {\n            this.scrollStrategies = scrollStrategies;\n            this._overlayContainer = _overlayContainer;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._positionBuilder = _positionBuilder;\n            this._keyboardDispatcher = _keyboardDispatcher;\n            this._injector = _injector;\n            this._ngZone = _ngZone;\n            this._document = _document;\n            this._directionality = _directionality;\n            this._location = _location;\n        }\n        /**\n         * Creates an overlay.\n         * @param config Configuration applied to the overlay.\n         * @returns Reference to the created overlay.\n         */\n        create(config) {\n            const host = this._createHostElement();\n            const pane = this._createPaneElement(host);\n            const portalOutlet = this._createPortalOutlet(pane);\n            const overlayConfig = new OverlayConfig(config);\n            overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n            return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n        }\n        /**\n         * Gets a position builder that can be used, via fluent API,\n         * to construct and configure a position strategy.\n         * @returns An overlay position builder.\n         */\n        position() {\n            return this._positionBuilder;\n        }\n        /**\n         * Creates the DOM element for an overlay and appends it to the overlay container.\n         * @returns Newly-created pane element\n         */\n        _createPaneElement(host) {\n            const pane = this._document.createElement('div');\n            pane.id = `cdk-overlay-${nextUniqueId++}`;\n            pane.classList.add('cdk-overlay-pane');\n            host.appendChild(pane);\n            return pane;\n        }\n        /**\n         * Creates the host element that wraps around an overlay\n         * and can be used for advanced positioning.\n         * @returns Newly-create host element.\n         */\n        _createHostElement() {\n            const host = this._document.createElement('div');\n            this._overlayContainer.getContainerElement().appendChild(host);\n            return host;\n        }\n        /**\n         * Create a DomPortalOutlet into which the overlay content can be loaded.\n         * @param pane The DOM element to turn into a portal outlet.\n         * @returns A portal outlet for the given DOM element.\n         */\n        _createPortalOutlet(pane) {\n            // We have to resolve the ApplicationRef later in order to allow people\n            // to use overlay-based providers during app initialization.\n            if (!this._appRef) {\n                this._appRef = this._injector.get(ApplicationRef);\n            }\n            return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n        }\n    }\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: function (t) { return Overlay.ɵfac(t); } });\n    Overlay.ctorParameters = () => [\n        { type: ScrollStrategyOptions },\n        { type: OverlayContainer },\n        { type: ComponentFactoryResolver },\n        { type: OverlayPositionBuilder },\n        { type: OverlayKeyboardDispatcher },\n        { type: Injector },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Directionality },\n        { type: Location, decorators: [{ type: Optional }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n    return Overlay;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (config) => overlay.scrollStrategies.reposition(config);\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nlet CdkOverlayOrigin = /** @class */ (() => {\n    class CdkOverlayOrigin {\n        constructor(\n        /** Reference to the element on which the directive is applied. */\n        elementRef) {\n            this.elementRef = elementRef;\n        }\n    }\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n    CdkOverlayOrigin.ctorParameters = () => [\n        { type: ElementRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return CdkOverlayOrigin;\n})();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nlet CdkConnectedOverlay = /** @class */ (() => {\n    class CdkConnectedOverlay {\n        // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n        constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n            this._overlay = _overlay;\n            this._dir = _dir;\n            this._hasBackdrop = false;\n            this._lockPosition = false;\n            this._growAfterOpen = false;\n            this._flexibleDimensions = false;\n            this._push = false;\n            this._backdropSubscription = Subscription.EMPTY;\n            /** Margin between the overlay and the viewport edges. */\n            this.viewportMargin = 0;\n            /** Whether the overlay is open. */\n            this.open = false;\n            /** Event emitted when the backdrop is clicked. */\n            this.backdropClick = new EventEmitter();\n            /** Event emitted when the position has changed. */\n            this.positionChange = new EventEmitter();\n            /** Event emitted when the overlay has been attached. */\n            this.attach = new EventEmitter();\n            /** Event emitted when the overlay has been detached. */\n            this.detach = new EventEmitter();\n            /** Emits when there are keyboard events that are targeted at the overlay. */\n            this.overlayKeydown = new EventEmitter();\n            this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n            this._scrollStrategyFactory = scrollStrategyFactory;\n            this.scrollStrategy = this._scrollStrategyFactory();\n        }\n        /** The offset in pixels for the overlay connection point on the x-axis */\n        get offsetX() { return this._offsetX; }\n        set offsetX(offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._updatePositionStrategy(this._position);\n            }\n        }\n        /** The offset in pixels for the overlay connection point on the y-axis */\n        get offsetY() { return this._offsetY; }\n        set offsetY(offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._updatePositionStrategy(this._position);\n            }\n        }\n        /** Whether or not the overlay should attach a backdrop. */\n        get hasBackdrop() { return this._hasBackdrop; }\n        set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n        /** Whether or not the overlay should be locked when scrolling. */\n        get lockPosition() { return this._lockPosition; }\n        set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        get flexibleDimensions() { return this._flexibleDimensions; }\n        set flexibleDimensions(value) {\n            this._flexibleDimensions = coerceBooleanProperty(value);\n        }\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        get growAfterOpen() { return this._growAfterOpen; }\n        set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        get push() { return this._push; }\n        set push(value) { this._push = coerceBooleanProperty(value); }\n        /** The associated overlay reference. */\n        get overlayRef() {\n            return this._overlayRef;\n        }\n        /** The element's layout direction. */\n        get dir() {\n            return this._dir ? this._dir.value : 'ltr';\n        }\n        ngOnDestroy() {\n            if (this._overlayRef) {\n                this._overlayRef.dispose();\n            }\n            this._backdropSubscription.unsubscribe();\n        }\n        ngOnChanges(changes) {\n            if (this._position) {\n                this._updatePositionStrategy(this._position);\n                this._overlayRef.updateSize({\n                    width: this.width,\n                    minWidth: this.minWidth,\n                    height: this.height,\n                    minHeight: this.minHeight,\n                });\n                if (changes['origin'] && this.open) {\n                    this._position.apply();\n                }\n            }\n            if (changes['open']) {\n                this.open ? this._attachOverlay() : this._detachOverlay();\n            }\n        }\n        /** Creates an overlay */\n        _createOverlay() {\n            if (!this.positions || !this.positions.length) {\n                this.positions = defaultPositionList;\n            }\n            this._overlayRef = this._overlay.create(this._buildConfig());\n            this._overlayRef.keydownEvents().subscribe((event) => {\n                this.overlayKeydown.next(event);\n                if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._detachOverlay();\n                }\n            });\n        }\n        /** Builds the overlay config based on the directive's inputs */\n        _buildConfig() {\n            const positionStrategy = this._position =\n                this.positionStrategy || this._createPositionStrategy();\n            const overlayConfig = new OverlayConfig({\n                direction: this._dir,\n                positionStrategy,\n                scrollStrategy: this.scrollStrategy,\n                hasBackdrop: this.hasBackdrop\n            });\n            if (this.width || this.width === 0) {\n                overlayConfig.width = this.width;\n            }\n            if (this.height || this.height === 0) {\n                overlayConfig.height = this.height;\n            }\n            if (this.minWidth || this.minWidth === 0) {\n                overlayConfig.minWidth = this.minWidth;\n            }\n            if (this.minHeight || this.minHeight === 0) {\n                overlayConfig.minHeight = this.minHeight;\n            }\n            if (this.backdropClass) {\n                overlayConfig.backdropClass = this.backdropClass;\n            }\n            if (this.panelClass) {\n                overlayConfig.panelClass = this.panelClass;\n            }\n            return overlayConfig;\n        }\n        /** Updates the state of a position strategy, based on the values of the directive inputs. */\n        _updatePositionStrategy(positionStrategy) {\n            const positions = this.positions.map(currentPosition => ({\n                originX: currentPosition.originX,\n                originY: currentPosition.originY,\n                overlayX: currentPosition.overlayX,\n                overlayY: currentPosition.overlayY,\n                offsetX: currentPosition.offsetX || this.offsetX,\n                offsetY: currentPosition.offsetY || this.offsetY,\n                panelClass: currentPosition.panelClass || undefined,\n            }));\n            return positionStrategy\n                .setOrigin(this.origin.elementRef)\n                .withPositions(positions)\n                .withFlexibleDimensions(this.flexibleDimensions)\n                .withPush(this.push)\n                .withGrowAfterOpen(this.growAfterOpen)\n                .withViewportMargin(this.viewportMargin)\n                .withLockedPosition(this.lockPosition)\n                .withTransformOriginOn(this.transformOriginSelector);\n        }\n        /** Returns the position strategy of the overlay to be set on the overlay config */\n        _createPositionStrategy() {\n            const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n            this._updatePositionStrategy(strategy);\n            strategy.positionChanges.subscribe(p => this.positionChange.emit(p));\n            return strategy;\n        }\n        /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n        _attachOverlay() {\n            if (!this._overlayRef) {\n                this._createOverlay();\n            }\n            else {\n                // Update the overlay size, in case the directive's inputs have changed\n                this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n            }\n            if (!this._overlayRef.hasAttached()) {\n                this._overlayRef.attach(this._templatePortal);\n                this.attach.emit();\n            }\n            if (this.hasBackdrop) {\n                this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                    this.backdropClick.emit(event);\n                });\n            }\n            else {\n                this._backdropSubscription.unsubscribe();\n            }\n        }\n        /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n        _detachOverlay() {\n            if (this._overlayRef) {\n                this._overlayRef.detach();\n                this.detach.emit();\n            }\n            this._backdropSubscription.unsubscribe();\n        }\n    }\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n    CdkConnectedOverlay.ctorParameters = () => [\n        { type: Overlay },\n        { type: TemplateRef },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ];\n    CdkConnectedOverlay.propDecorators = {\n        origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n        positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n        positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n        offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n        offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n        width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n        height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n        minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n        minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n        backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n        panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n        viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n        scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n        open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n        transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n        hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n        lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n        flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n        growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n        push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n        backdropClick: [{ type: Output }],\n        positionChange: [{ type: Output }],\n        attach: [{ type: Output }],\n        detach: [{ type: Output }],\n        overlayKeydown: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n    return CdkConnectedOverlay;\n})();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet OverlayModule = /** @class */ (() => {\n    class OverlayModule {\n    }\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n    return OverlayModule;\n})();\n/**\n * @deprecated Use `OverlayModule` instead.\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nlet FullscreenOverlayContainer = /** @class */ (() => {\n    class FullscreenOverlayContainer extends OverlayContainer {\n        constructor(_document, \n        /**\n         * @deprecated `platform` parameter to become required.\n         * @breaking-change 10.0.0\n         */\n        platform) {\n            super(_document, platform);\n        }\n        ngOnDestroy() {\n            super.ngOnDestroy();\n            if (this._fullScreenEventName && this._fullScreenListener) {\n                this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n            }\n        }\n        _createContainer() {\n            super._createContainer();\n            this._adjustParentForFullscreenChange();\n            this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n        }\n        _adjustParentForFullscreenChange() {\n            if (!this._containerElement) {\n                return;\n            }\n            const fullscreenElement = this.getFullscreenElement();\n            const parent = fullscreenElement || this._document.body;\n            parent.appendChild(this._containerElement);\n        }\n        _addFullscreenChangeListener(fn) {\n            const eventName = this._getEventName();\n            if (eventName) {\n                if (this._fullScreenListener) {\n                    this._document.removeEventListener(eventName, this._fullScreenListener);\n                }\n                this._document.addEventListener(eventName, fn);\n                this._fullScreenListener = fn;\n            }\n        }\n        _getEventName() {\n            if (!this._fullScreenEventName) {\n                const _document = this._document;\n                if (_document.fullscreenEnabled) {\n                    this._fullScreenEventName = 'fullscreenchange';\n                }\n                else if (_document.webkitFullscreenEnabled) {\n                    this._fullScreenEventName = 'webkitfullscreenchange';\n                }\n                else if (_document.mozFullScreenEnabled) {\n                    this._fullScreenEventName = 'mozfullscreenchange';\n                }\n                else if (_document.msFullscreenEnabled) {\n                    this._fullScreenEventName = 'MSFullscreenChange';\n                }\n            }\n            return this._fullScreenEventName;\n        }\n        /**\n         * When the page is put into fullscreen mode, a specific element is specified.\n         * Only that element and its children are visible when in fullscreen mode.\n         */\n        getFullscreenElement() {\n            const _document = this._document;\n            return _document.fullscreenElement ||\n                _document.webkitFullscreenElement ||\n                _document.mozFullScreenElement ||\n                _document.msFullscreenElement ||\n                null;\n        }\n    }\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n    FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n    FullscreenOverlayContainer.ctorParameters = () => [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n    return FullscreenOverlayContainer;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nlet CdkPortal = /** @class */ (() => {\n    class CdkPortal extends TemplatePortal {\n        constructor(templateRef, viewContainerRef) {\n            super(templateRef, viewContainerRef);\n        }\n    }\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    CdkPortal.ctorParameters = () => [\n        { type: TemplateRef },\n        { type: ViewContainerRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n    return CdkPortal;\n})();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nlet TemplatePortalDirective = /** @class */ (() => {\n    class TemplatePortalDirective extends CdkPortal {\n    }\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n    return TemplatePortalDirective;\n})();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nlet CdkPortalOutlet = /** @class */ (() => {\n    class CdkPortalOutlet extends BasePortalOutlet {\n        constructor(_componentFactoryResolver, _viewContainerRef, \n        /**\n         * @deprecated `_document` parameter to be made required.\n         * @breaking-change 9.0.0\n         */\n        _document) {\n            super();\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._viewContainerRef = _viewContainerRef;\n            /** Whether the portal component is initialized. */\n            this._isInitialized = false;\n            /** Emits when a portal is attached to the outlet. */\n            this.attached = new EventEmitter();\n            /**\n             * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n             * @param portal Portal to be attached.\n             * @deprecated To be turned into a method.\n             * @breaking-change 10.0.0\n             */\n            this.attachDomPortal = (portal) => {\n                // @breaking-change 9.0.0 Remove check and error once the\n                // `_document` constructor parameter is required.\n                if (!this._document) {\n                    throw Error('Cannot attach DOM portal without _document constructor parameter');\n                }\n                const element = portal.element;\n                if (!element.parentNode) {\n                    throw Error('DOM portal content must be attached to a parent node.');\n                }\n                // Anchor used to save the element's previous position so\n                // that we can restore it when the portal is detached.\n                const anchorNode = this._document.createComment('dom-portal');\n                portal.setAttachedHost(this);\n                element.parentNode.insertBefore(anchorNode, element);\n                this._getRootNode().appendChild(element);\n                super.setDisposeFn(() => {\n                    if (anchorNode.parentNode) {\n                        anchorNode.parentNode.replaceChild(element, anchorNode);\n                    }\n                });\n            };\n            this._document = _document;\n        }\n        /** Portal associated with the Portal outlet. */\n        get portal() {\n            return this._attachedPortal;\n        }\n        set portal(portal) {\n            // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n            // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n            // and attach a portal programmatically in the parent component. When Angular does the first CD\n            // round, it will fire the setter with empty string, causing the user's content to be cleared.\n            if (this.hasAttached() && !portal && !this._isInitialized) {\n                return;\n            }\n            if (this.hasAttached()) {\n                super.detach();\n            }\n            if (portal) {\n                super.attach(portal);\n            }\n            this._attachedPortal = portal;\n        }\n        /** Component or view reference that is attached to the portal. */\n        get attachedRef() {\n            return this._attachedRef;\n        }\n        ngOnInit() {\n            this._isInitialized = true;\n        }\n        ngOnDestroy() {\n            super.dispose();\n            this._attachedPortal = null;\n            this._attachedRef = null;\n        }\n        /**\n         * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n         *\n         * @param portal Portal to be attached to the portal outlet.\n         * @returns Reference to the created component.\n         */\n        attachComponentPortal(portal) {\n            portal.setAttachedHost(this);\n            // If the portal specifies an origin, use that as the logical location of the component\n            // in the application tree. Otherwise use the location of this PortalOutlet.\n            const viewContainerRef = portal.viewContainerRef != null ?\n                portal.viewContainerRef :\n                this._viewContainerRef;\n            const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n            const componentFactory = resolver.resolveComponentFactory(portal.component);\n            const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n            // If we're using a view container that's different from the injected one (e.g. when the portal\n            // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n            // inside of the alternate view container.\n            if (viewContainerRef !== this._viewContainerRef) {\n                this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n            }\n            super.setDisposeFn(() => ref.destroy());\n            this._attachedPortal = portal;\n            this._attachedRef = ref;\n            this.attached.emit(ref);\n            return ref;\n        }\n        /**\n         * Attach the given TemplatePortal to this PortalHost as an embedded View.\n         * @param portal Portal to be attached.\n         * @returns Reference to the created embedded view.\n         */\n        attachTemplatePortal(portal) {\n            portal.setAttachedHost(this);\n            const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n            super.setDisposeFn(() => this._viewContainerRef.clear());\n            this._attachedPortal = portal;\n            this._attachedRef = viewRef;\n            this.attached.emit(viewRef);\n            return viewRef;\n        }\n        /** Gets the root node of the portal outlet. */\n        _getRootNode() {\n            const nativeElement = this._viewContainerRef.element.nativeElement;\n            // The directive could be set on a template which will result in a comment\n            // node being the root. Use the comment's parent node if that is the case.\n            return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n                nativeElement : nativeElement.parentNode);\n        }\n    }\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    CdkPortalOutlet.ctorParameters = () => [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n    CdkPortalOutlet.propDecorators = {\n        attached: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n    return CdkPortalOutlet;\n})();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nlet PortalHostDirective = /** @class */ (() => {\n    class PortalHostDirective extends CdkPortalOutlet {\n    }\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\n    return PortalHostDirective;\n})();\nlet PortalModule = /** @class */ (() => {\n    class PortalModule {\n    }\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n    return PortalModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        let firstVisibleIndex = scrollOffset / this._itemSize;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nlet CdkFixedSizeVirtualScroll = /** @class */ (() => {\n    class CdkFixedSizeVirtualScroll {\n        constructor() {\n            this._itemSize = 20;\n            this._minBufferPx = 100;\n            this._maxBufferPx = 200;\n            /** The scroll strategy used by this directive. */\n            this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n        }\n        /** The size of the items in the list (in pixels). */\n        get itemSize() { return this._itemSize; }\n        set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n        /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         */\n        get minBufferPx() { return this._minBufferPx; }\n        set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n        /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         */\n        get maxBufferPx() { return this._maxBufferPx; }\n        set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n        ngOnChanges() {\n            this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n        }\n    }\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n    CdkFixedSizeVirtualScroll.propDecorators = {\n        itemSize: [{ type: Input }],\n        minBufferPx: [{ type: Input }],\n        maxBufferPx: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n    return CdkFixedSizeVirtualScroll;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nlet ScrollDispatcher = /** @class */ (() => {\n    class ScrollDispatcher {\n        constructor(_ngZone, _platform, \n        /** @breaking-change 11.0.0 make document required */\n        document) {\n            this._ngZone = _ngZone;\n            this._platform = _platform;\n            /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n            this._scrolled = new Subject();\n            /** Keeps track of the global `scroll` and `resize` subscriptions. */\n            this._globalSubscription = null;\n            /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n            this._scrolledCount = 0;\n            /**\n             * Map of all the scrollable references that are registered with the service and their\n             * scroll event subscriptions.\n             */\n            this.scrollContainers = new Map();\n            this._document = document;\n        }\n        /**\n         * Registers a scrollable instance with the service and listens for its scrolled events. When the\n         * scrollable is scrolled, the service emits the event to its scrolled observable.\n         * @param scrollable Scrollable instance to be registered.\n         */\n        register(scrollable) {\n            if (!this.scrollContainers.has(scrollable)) {\n                this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                    .subscribe(() => this._scrolled.next(scrollable)));\n            }\n        }\n        /**\n         * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n         * @param scrollable Scrollable instance to be deregistered.\n         */\n        deregister(scrollable) {\n            const scrollableReference = this.scrollContainers.get(scrollable);\n            if (scrollableReference) {\n                scrollableReference.unsubscribe();\n                this.scrollContainers.delete(scrollable);\n            }\n        }\n        /**\n         * Returns an observable that emits an event whenever any of the registered Scrollable\n         * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n         * to override the default \"throttle\" time.\n         *\n         * **Note:** in order to avoid hitting change detection for every scroll event,\n         * all of the events emitted from this stream will be run outside the Angular zone.\n         * If you need to update any data bindings as a result of a scroll event, you have\n         * to run the callback using `NgZone.run`.\n         */\n        scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n            if (!this._platform.isBrowser) {\n                return of();\n            }\n            return new Observable((observer) => {\n                if (!this._globalSubscription) {\n                    this._addGlobalListener();\n                }\n                // In the case of a 0ms delay, use an observable without auditTime\n                // since it does add a perceptible delay in processing overhead.\n                const subscription = auditTimeInMs > 0 ?\n                    this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                    this._scrolled.subscribe(observer);\n                this._scrolledCount++;\n                return () => {\n                    subscription.unsubscribe();\n                    this._scrolledCount--;\n                    if (!this._scrolledCount) {\n                        this._removeGlobalListener();\n                    }\n                };\n            });\n        }\n        ngOnDestroy() {\n            this._removeGlobalListener();\n            this.scrollContainers.forEach((_, container) => this.deregister(container));\n            this._scrolled.complete();\n        }\n        /**\n         * Returns an observable that emits whenever any of the\n         * scrollable ancestors of an element are scrolled.\n         * @param elementRef Element whose ancestors to listen for.\n         * @param auditTimeInMs Time to throttle the scroll events.\n         */\n        ancestorScrolled(elementRef, auditTimeInMs) {\n            const ancestors = this.getAncestorScrollContainers(elementRef);\n            return this.scrolled(auditTimeInMs).pipe(filter(target => {\n                return !target || ancestors.indexOf(target) > -1;\n            }));\n        }\n        /** Returns all registered Scrollables that contain the provided element. */\n        getAncestorScrollContainers(elementRef) {\n            const scrollingContainers = [];\n            this.scrollContainers.forEach((_subscription, scrollable) => {\n                if (this._scrollableContainsElement(scrollable, elementRef)) {\n                    scrollingContainers.push(scrollable);\n                }\n            });\n            return scrollingContainers;\n        }\n        /** Access injected document if available or fallback to global document reference */\n        _getDocument() {\n            return this._document || document;\n        }\n        /** Use defaultView of injected document if available or fallback to global window reference */\n        _getWindow() {\n            const doc = this._getDocument();\n            return doc.defaultView || window;\n        }\n        /** Returns true if the element is contained within the provided Scrollable. */\n        _scrollableContainsElement(scrollable, elementRef) {\n            let element = elementRef.nativeElement;\n            let scrollableElement = scrollable.getElementRef().nativeElement;\n            // Traverse through the element parents until we reach null, checking if any of the elements\n            // are the scrollable's element.\n            do {\n                if (element == scrollableElement) {\n                    return true;\n                }\n            } while (element = element.parentElement);\n            return false;\n        }\n        /** Sets up the global scroll listeners. */\n        _addGlobalListener() {\n            this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n            });\n        }\n        /** Cleans up the global scroll listener. */\n        _removeGlobalListener() {\n            if (this._globalSubscription) {\n                this._globalSubscription.unsubscribe();\n                this._globalSubscription = null;\n            }\n        }\n    }\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n    ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\n    ScrollDispatcher.ctorParameters = () => [\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ScrollDispatcher;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nlet CdkScrollable = /** @class */ (() => {\n    class CdkScrollable {\n        constructor(elementRef, scrollDispatcher, ngZone, dir) {\n            this.elementRef = elementRef;\n            this.scrollDispatcher = scrollDispatcher;\n            this.ngZone = ngZone;\n            this.dir = dir;\n            this._destroyed = new Subject();\n            this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n                .subscribe(observer)));\n        }\n        ngOnInit() {\n            this.scrollDispatcher.register(this);\n        }\n        ngOnDestroy() {\n            this.scrollDispatcher.deregister(this);\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /** Returns observable that emits when a scroll event is fired on the host element. */\n        elementScrolled() {\n            return this._elementScrolled;\n        }\n        /** Gets the ElementRef for the viewport. */\n        getElementRef() {\n            return this.elementRef;\n        }\n        /**\n         * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n         * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n         * left and right always refer to the left and right side of the scrolling container irrespective\n         * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n         * in an RTL context.\n         * @param options specified the offsets to scroll to.\n         */\n        scrollTo(options) {\n            const el = this.elementRef.nativeElement;\n            const isRtl = this.dir && this.dir.value == 'rtl';\n            // Rewrite start & end offsets as right or left offsets.\n            if (options.left == null) {\n                options.left = isRtl ? options.end : options.start;\n            }\n            if (options.right == null) {\n                options.right = isRtl ? options.start : options.end;\n            }\n            // Rewrite the bottom offset as a top offset.\n            if (options.bottom != null) {\n                options.top =\n                    el.scrollHeight - el.clientHeight - options.bottom;\n            }\n            // Rewrite the right offset as a left offset.\n            if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n                if (options.left != null) {\n                    options.right =\n                        el.scrollWidth - el.clientWidth - options.left;\n                }\n                if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                    options.left = options.right;\n                }\n                else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                    options.left = options.right ? -options.right : options.right;\n                }\n            }\n            else {\n                if (options.right != null) {\n                    options.left =\n                        el.scrollWidth - el.clientWidth - options.right;\n                }\n            }\n            this._applyScrollToOptions(options);\n        }\n        _applyScrollToOptions(options) {\n            const el = this.elementRef.nativeElement;\n            if (supportsScrollBehavior()) {\n                el.scrollTo(options);\n            }\n            else {\n                if (options.top != null) {\n                    el.scrollTop = options.top;\n                }\n                if (options.left != null) {\n                    el.scrollLeft = options.left;\n                }\n            }\n        }\n        /**\n         * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n         * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n         * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n         * left and right always refer to the left and right side of the scrolling container irrespective\n         * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n         * in an RTL context.\n         * @param from The edge to measure from.\n         */\n        measureScrollOffset(from) {\n            const LEFT = 'left';\n            const RIGHT = 'right';\n            const el = this.elementRef.nativeElement;\n            if (from == 'top') {\n                return el.scrollTop;\n            }\n            if (from == 'bottom') {\n                return el.scrollHeight - el.clientHeight - el.scrollTop;\n            }\n            // Rewrite start & end as left or right offsets.\n            const isRtl = this.dir && this.dir.value == 'rtl';\n            if (from == 'start') {\n                from = isRtl ? RIGHT : LEFT;\n            }\n            else if (from == 'end') {\n                from = isRtl ? LEFT : RIGHT;\n            }\n            if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n                // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n                // 0 when scrolled all the way right.\n                if (from == LEFT) {\n                    return el.scrollWidth - el.clientWidth - el.scrollLeft;\n                }\n                else {\n                    return el.scrollLeft;\n                }\n            }\n            else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n                // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n                // 0 when scrolled all the way right.\n                if (from == LEFT) {\n                    return el.scrollLeft + el.scrollWidth - el.clientWidth;\n                }\n                else {\n                    return -el.scrollLeft;\n                }\n            }\n            else {\n                // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n                // (scrollWidth - clientWidth) when scrolled all the way right.\n                if (from == LEFT) {\n                    return el.scrollLeft;\n                }\n                else {\n                    return el.scrollWidth - el.clientWidth - el.scrollLeft;\n                }\n            }\n        }\n    }\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n    CdkScrollable.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n    return CdkScrollable;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nlet ViewportRuler = /** @class */ (() => {\n    class ViewportRuler {\n        constructor(_platform, ngZone, \n        /** @breaking-change 11.0.0 make document required */\n        document) {\n            this._platform = _platform;\n            this._document = document;\n            ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                this._change = _platform.isBrowser ?\n                    merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                    of();\n                // Note that we need to do the subscription inside `runOutsideAngular`\n                // since subscribing is what causes the event listener to be added.\n                this._invalidateCache = this.change().subscribe(() => this._updateViewportSize());\n            });\n        }\n        ngOnDestroy() {\n            this._invalidateCache.unsubscribe();\n        }\n        /** Returns the viewport's width and height. */\n        getViewportSize() {\n            if (!this._viewportSize) {\n                this._updateViewportSize();\n            }\n            const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n            // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n            if (!this._platform.isBrowser) {\n                this._viewportSize = null;\n            }\n            return output;\n        }\n        /** Gets a ClientRect for the viewport's bounds. */\n        getViewportRect() {\n            // Use the document element's bounding rect rather than the window scroll properties\n            // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n            // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n            // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n            // can disagree when the page is pinch-zoomed (on devices that support touch).\n            // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n            // We use the documentElement instead of the body because, by default (without a css reset)\n            // browsers typically give the document body an 8px margin, which is not included in\n            // getBoundingClientRect().\n            const scrollPosition = this.getViewportScrollPosition();\n            const { width, height } = this.getViewportSize();\n            return {\n                top: scrollPosition.top,\n                left: scrollPosition.left,\n                bottom: scrollPosition.top + height,\n                right: scrollPosition.left + width,\n                height,\n                width,\n            };\n        }\n        /** Gets the (top, left) scroll position of the viewport. */\n        getViewportScrollPosition() {\n            // While we can get a reference to the fake document\n            // during SSR, it doesn't have getBoundingClientRect.\n            if (!this._platform.isBrowser) {\n                return { top: 0, left: 0 };\n            }\n            // The top-left-corner of the viewport is determined by the scroll position of the document\n            // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n            // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n            // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n            // `document.documentElement` works consistently, where the `top` and `left` values will\n            // equal negative the scroll position.\n            const document = this._getDocument();\n            const window = this._getWindow();\n            const documentElement = document.documentElement;\n            const documentRect = documentElement.getBoundingClientRect();\n            const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                documentElement.scrollTop || 0;\n            const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                documentElement.scrollLeft || 0;\n            return { top, left };\n        }\n        /**\n         * Returns a stream that emits whenever the size of the viewport changes.\n         * @param throttleTime Time in milliseconds to throttle the stream.\n         */\n        change(throttleTime = DEFAULT_RESIZE_TIME) {\n            return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n        }\n        /** Access injected document if available or fallback to global document reference */\n        _getDocument() {\n            return this._document || document;\n        }\n        /** Use defaultView of injected document if available or fallback to global window reference */\n        _getWindow() {\n            const doc = this._getDocument();\n            return doc.defaultView || window;\n        }\n        /** Updates the cached viewport size. */\n        _updateViewportSize() {\n            const window = this._getWindow();\n            this._viewportSize = this._platform.isBrowser ?\n                { width: window.innerWidth, height: window.innerHeight } :\n                { width: 0, height: 0 };\n        }\n    }\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n    ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\n    ViewportRuler.ctorParameters = () => [\n        { type: Platform },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ViewportRuler;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nlet CdkVirtualScrollViewport = /** @class */ (() => {\n    class CdkVirtualScrollViewport extends CdkScrollable {\n        constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n        /**\n         * @deprecated `viewportRuler` parameter to become required.\n         * @breaking-change 11.0.0\n         */\n        viewportRuler) {\n            super(elementRef, scrollDispatcher, ngZone, dir);\n            this.elementRef = elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._scrollStrategy = _scrollStrategy;\n            /** Emits when the viewport is detached from a CdkVirtualForOf. */\n            this._detachedSubject = new Subject();\n            /** Emits when the rendered range changes. */\n            this._renderedRangeSubject = new Subject();\n            this._orientation = 'vertical';\n            // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n            // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n            // depending on how the strategy calculates the scrolled index, it may come at a cost to\n            // performance.\n            /** Emits when the index of the first element visible in the viewport changes. */\n            this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n            /** A stream that emits whenever the rendered range changes. */\n            this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n            /**\n             * The total size of all content (in pixels), including content that is not currently rendered.\n             */\n            this._totalContentSize = 0;\n            /** A string representing the `style.width` property value to be used for the spacer element. */\n            this._totalContentWidth = '';\n            /** A string representing the `style.height` property value to be used for the spacer element. */\n            this._totalContentHeight = '';\n            /** The currently rendered range of indices. */\n            this._renderedRange = { start: 0, end: 0 };\n            /** The length of the data bound to this viewport (in number of items). */\n            this._dataLength = 0;\n            /** The size of the viewport (in pixels). */\n            this._viewportSize = 0;\n            /** The last rendered content offset that was set. */\n            this._renderedContentOffset = 0;\n            /**\n             * Whether the last rendered content offset was to the end of the content (and therefore needs to\n             * be rewritten as an offset to the start of the content).\n             */\n            this._renderedContentOffsetNeedsRewrite = false;\n            /** Whether there is a pending change detection cycle. */\n            this._isChangeDetectionPending = false;\n            /** A list of functions to run after the next change detection cycle. */\n            this._runAfterChangeDetection = [];\n            /** Subscription to changes in the viewport size. */\n            this._viewportChanges = Subscription.EMPTY;\n            if (!_scrollStrategy) {\n                throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n            }\n            // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n            if (viewportRuler) {\n                this._viewportChanges = viewportRuler.change().subscribe(() => {\n                    this.checkViewportSize();\n                });\n            }\n        }\n        /** The direction the viewport scrolls. */\n        get orientation() {\n            return this._orientation;\n        }\n        set orientation(orientation) {\n            if (this._orientation !== orientation) {\n                this._orientation = orientation;\n                this._calculateSpacerSize();\n            }\n        }\n        ngOnInit() {\n            super.ngOnInit();\n            // It's still too early to measure the viewport at this point. Deferring with a promise allows\n            // the Viewport to be rendered with the correct size before we measure. We run this outside the\n            // zone to avoid causing more change detection cycles. We handle the change detection loop\n            // ourselves instead.\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._measureViewportSize();\n                this._scrollStrategy.attach(this);\n                this.elementScrolled()\n                    .pipe(\n                // Start off with a fake scroll event so we properly detect our initial position.\n                startWith(null), \n                // Collect multiple events into one until the next animation frame. This way if\n                // there are multiple scroll events in the same frame we only need to recheck\n                // our layout once.\n                auditTime(0, SCROLL_SCHEDULER))\n                    .subscribe(() => this._scrollStrategy.onContentScrolled());\n                this._markChangeDetectionNeeded();\n            }));\n        }\n        ngOnDestroy() {\n            this.detach();\n            this._scrollStrategy.detach();\n            // Complete all subjects\n            this._renderedRangeSubject.complete();\n            this._detachedSubject.complete();\n            this._viewportChanges.unsubscribe();\n            super.ngOnDestroy();\n        }\n        /** Attaches a `CdkVirtualForOf` to this viewport. */\n        attach(forOf) {\n            if (this._forOf) {\n                throw Error('CdkVirtualScrollViewport is already attached.');\n            }\n            // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n            // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n            // change detection loop ourselves.\n            this.ngZone.runOutsideAngular(() => {\n                this._forOf = forOf;\n                this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                    const newLength = data.length;\n                    if (newLength !== this._dataLength) {\n                        this._dataLength = newLength;\n                        this._scrollStrategy.onDataLengthChanged();\n                    }\n                    this._doChangeDetection();\n                });\n            });\n        }\n        /** Detaches the current `CdkVirtualForOf`. */\n        detach() {\n            this._forOf = null;\n            this._detachedSubject.next();\n        }\n        /** Gets the length of the data bound to this viewport (in number of items). */\n        getDataLength() {\n            return this._dataLength;\n        }\n        /** Gets the size of the viewport (in pixels). */\n        getViewportSize() {\n            return this._viewportSize;\n        }\n        // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n        // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n        // setting it to something else, but its error prone and should probably be split into\n        // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n        /** Get the current rendered range of items. */\n        getRenderedRange() {\n            return this._renderedRange;\n        }\n        /**\n         * Sets the total size of all content (in pixels), including content that is not currently\n         * rendered.\n         */\n        setTotalContentSize(size) {\n            if (this._totalContentSize !== size) {\n                this._totalContentSize = size;\n                this._calculateSpacerSize();\n                this._markChangeDetectionNeeded();\n            }\n        }\n        /** Sets the currently rendered range of indices. */\n        setRenderedRange(range) {\n            if (!rangesEqual(this._renderedRange, range)) {\n                this._renderedRangeSubject.next(this._renderedRange = range);\n                this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n            }\n        }\n        /**\n         * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n         */\n        getOffsetToRenderedContentStart() {\n            return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n        }\n        /**\n         * Sets the offset from the start of the viewport to either the start or end of the rendered data\n         * (in pixels).\n         */\n        setRenderedContentOffset(offset, to = 'to-start') {\n            // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n            // in the negative direction.\n            const isRtl = this.dir && this.dir.value == 'rtl';\n            const isHorizontal = this.orientation == 'horizontal';\n            const axis = isHorizontal ? 'X' : 'Y';\n            const axisDirection = isHorizontal && isRtl ? -1 : 1;\n            let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n            this._renderedContentOffset = offset;\n            if (to === 'to-end') {\n                transform += ` translate${axis}(-100%)`;\n                // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n                // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n                // expand upward).\n                this._renderedContentOffsetNeedsRewrite = true;\n            }\n            if (this._renderedContentTransform != transform) {\n                // We know this value is safe because we parse `offset` with `Number()` before passing it\n                // into the string.\n                this._renderedContentTransform = transform;\n                this._markChangeDetectionNeeded(() => {\n                    if (this._renderedContentOffsetNeedsRewrite) {\n                        this._renderedContentOffset -= this.measureRenderedContentSize();\n                        this._renderedContentOffsetNeedsRewrite = false;\n                        this.setRenderedContentOffset(this._renderedContentOffset);\n                    }\n                    else {\n                        this._scrollStrategy.onRenderedOffsetChanged();\n                    }\n                });\n            }\n        }\n        /**\n         * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n         * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n         * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n         * @param offset The offset to scroll to.\n         * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n         */\n        scrollToOffset(offset, behavior = 'auto') {\n            const options = { behavior };\n            if (this.orientation === 'horizontal') {\n                options.start = offset;\n            }\n            else {\n                options.top = offset;\n            }\n            this.scrollTo(options);\n        }\n        /**\n         * Scrolls to the offset for the given index.\n         * @param index The index of the element to scroll to.\n         * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n         */\n        scrollToIndex(index, behavior = 'auto') {\n            this._scrollStrategy.scrollToIndex(index, behavior);\n        }\n        /**\n         * Gets the current scroll offset from the start of the viewport (in pixels).\n         * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n         *     in horizontal mode.\n         */\n        measureScrollOffset(from) {\n            return from ?\n                super.measureScrollOffset(from) :\n                super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n        }\n        /** Measure the combined size of all of the rendered items. */\n        measureRenderedContentSize() {\n            const contentEl = this._contentWrapper.nativeElement;\n            return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n        }\n        /**\n         * Measure the total combined size of the given range. Throws if the range includes items that are\n         * not rendered.\n         */\n        measureRangeSize(range) {\n            if (!this._forOf) {\n                return 0;\n            }\n            return this._forOf.measureRangeSize(range, this.orientation);\n        }\n        /** Update the viewport dimensions and re-render. */\n        checkViewportSize() {\n            // TODO: Cleanup later when add logic for handling content resize\n            this._measureViewportSize();\n            this._scrollStrategy.onDataLengthChanged();\n        }\n        /** Measure the viewport size. */\n        _measureViewportSize() {\n            const viewportEl = this.elementRef.nativeElement;\n            this._viewportSize = this.orientation === 'horizontal' ?\n                viewportEl.clientWidth : viewportEl.clientHeight;\n        }\n        /** Queue up change detection to run. */\n        _markChangeDetectionNeeded(runAfter) {\n            if (runAfter) {\n                this._runAfterChangeDetection.push(runAfter);\n            }\n            // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n            // properties sequentially we only have to run `_doChangeDetection` once at the end.\n            if (!this._isChangeDetectionPending) {\n                this._isChangeDetectionPending = true;\n                this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                    this._doChangeDetection();\n                }));\n            }\n        }\n        /** Run change detection. */\n        _doChangeDetection() {\n            this._isChangeDetectionPending = false;\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n            const runAfterChangeDetection = this._runAfterChangeDetection;\n            this._runAfterChangeDetection = [];\n            for (const fn of runAfterChangeDetection) {\n                fn();\n            }\n        }\n        /** Calculates the `style.width` and `style.height` for the spacer element. */\n        _calculateSpacerSize() {\n            this._totalContentHeight =\n                this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n            this._totalContentWidth =\n                this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n        }\n    }\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n    CdkVirtualScrollViewport.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ScrollDispatcher },\n        { type: ViewportRuler, decorators: [{ type: Optional }] }\n    ];\n    CdkVirtualScrollViewport.propDecorators = {\n        orientation: [{ type: Input }],\n        scrolledIndexChange: [{ type: Output }],\n        _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n    return CdkVirtualScrollViewport;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract size from a DOM Node. */\nfunction getSize(orientation, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nlet CdkVirtualForOf = /** @class */ (() => {\n    class CdkVirtualForOf {\n        constructor(\n        /** The view container to add items to. */\n        _viewContainerRef, \n        /** The template to use when stamping out new items. */\n        _template, \n        /** The set of available differs. */\n        _differs, \n        /** The virtual scrolling viewport that these items are being rendered in. */\n        _viewport, ngZone) {\n            this._viewContainerRef = _viewContainerRef;\n            this._template = _template;\n            this._differs = _differs;\n            this._viewport = _viewport;\n            /** Emits when the rendered view of the data changes. */\n            this.viewChange = new Subject();\n            /** Subject that emits when a new DataSource instance is given. */\n            this._dataSourceChanges = new Subject();\n            /**\n             * The size of the cache used to store templates that are not being used for re-use later.\n             * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n             */\n            this.cdkVirtualForTemplateCacheSize = 20;\n            /** Emits whenever the data in the current DataSource changes. */\n            this.dataStream = this._dataSourceChanges\n                .pipe(\n            // Start off with null `DataSource`.\n            startWith(null), \n            // Bundle up the previous and current data sources so we can work with both.\n            pairwise(), \n            // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n            // new one, passing back a stream of data changes which we run through `switchMap` to give\n            // us a data stream that emits the latest data from whatever the current `DataSource` is.\n            switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n            // Replay the last emitted data when someone subscribes.\n            shareReplay(1));\n            /** The differ used to calculate changes to the data. */\n            this._differ = null;\n            /**\n             * The template cache used to hold on ot template instancess that have been stamped out, but don't\n             * currently need to be rendered. These instances will be reused in the future rather than\n             * stamping out brand new ones.\n             */\n            this._templateCache = [];\n            /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n            this._needsUpdate = false;\n            this._destroyed = new Subject();\n            this.dataStream.subscribe(data => {\n                this._data = data;\n                this._onRenderedDataChange();\n            });\n            this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n                this._renderedRange = range;\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n                this._onRenderedDataChange();\n            });\n            this._viewport.attach(this);\n        }\n        /** The DataSource to display. */\n        get cdkVirtualForOf() {\n            return this._cdkVirtualForOf;\n        }\n        set cdkVirtualForOf(value) {\n            this._cdkVirtualForOf = value;\n            if (isDataSource(value)) {\n                this._dataSourceChanges.next(value);\n            }\n            else {\n                // Slice the value if its an NgIterable to ensure we're working with an array.\n                this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n            }\n        }\n        /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         */\n        get cdkVirtualForTrackBy() {\n            return this._cdkVirtualForTrackBy;\n        }\n        set cdkVirtualForTrackBy(fn) {\n            this._needsUpdate = true;\n            this._cdkVirtualForTrackBy = fn ?\n                (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n                undefined;\n        }\n        /** The template used to stamp out new elements. */\n        set cdkVirtualForTemplate(value) {\n            if (value) {\n                this._needsUpdate = true;\n                this._template = value;\n            }\n        }\n        /**\n         * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n         * in the specified range. Throws an error if the range includes items that are not currently\n         * rendered.\n         */\n        measureRangeSize(range, orientation) {\n            if (range.start >= range.end) {\n                return 0;\n            }\n            if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n                throw Error(`Error: attempted to measure an item that isn't rendered.`);\n            }\n            // The index into the list of rendered views for the first item in the range.\n            const renderedStartIndex = range.start - this._renderedRange.start;\n            // The length of the range we're measuring.\n            const rangeLen = range.end - range.start;\n            // Loop over all root nodes for all items in the range and sum up their size.\n            let totalSize = 0;\n            let i = rangeLen;\n            while (i--) {\n                const view = this._viewContainerRef.get(i + renderedStartIndex);\n                let j = view ? view.rootNodes.length : 0;\n                while (j--) {\n                    totalSize += getSize(orientation, view.rootNodes[j]);\n                }\n            }\n            return totalSize;\n        }\n        ngDoCheck() {\n            if (this._differ && this._needsUpdate) {\n                // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n                // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n                // changing (need to do this diff).\n                const changes = this._differ.diff(this._renderedItems);\n                if (!changes) {\n                    this._updateContext();\n                }\n                else {\n                    this._applyChanges(changes);\n                }\n                this._needsUpdate = false;\n            }\n        }\n        ngOnDestroy() {\n            this._viewport.detach();\n            this._dataSourceChanges.next();\n            this._dataSourceChanges.complete();\n            this.viewChange.complete();\n            this._destroyed.next();\n            this._destroyed.complete();\n            for (let view of this._templateCache) {\n                view.destroy();\n            }\n        }\n        /** React to scroll state changes in the viewport. */\n        _onRenderedDataChange() {\n            if (!this._renderedRange) {\n                return;\n            }\n            this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n            if (!this._differ) {\n                this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n            }\n            this._needsUpdate = true;\n        }\n        /** Swap out one `DataSource` for another. */\n        _changeDataSource(oldDs, newDs) {\n            if (oldDs) {\n                oldDs.disconnect(this);\n            }\n            this._needsUpdate = true;\n            return newDs ? newDs.connect(this) : of();\n        }\n        /** Update the `CdkVirtualForOfContext` for all views. */\n        _updateContext() {\n            const count = this._data.length;\n            let i = this._viewContainerRef.length;\n            while (i--) {\n                let view = this._viewContainerRef.get(i);\n                view.context.index = this._renderedRange.start + i;\n                view.context.count = count;\n                this._updateComputedContextProperties(view.context);\n                view.detectChanges();\n            }\n        }\n        /** Apply changes to the DOM. */\n        _applyChanges(changes) {\n            // Rearrange the views to put them in the right location.\n            changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n                if (record.previousIndex == null) { // Item added.\n                    const view = this._insertViewForNewItem(currentIndex);\n                    view.context.$implicit = record.item;\n                }\n                else if (currentIndex == null) { // Item removed.\n                    this._cacheView(this._detachView(adjustedPreviousIndex));\n                }\n                else { // Item moved.\n                    const view = this._viewContainerRef.get(adjustedPreviousIndex);\n                    this._viewContainerRef.move(view, currentIndex);\n                    view.context.$implicit = record.item;\n                }\n            });\n            // Update $implicit for any items that had an identity change.\n            changes.forEachIdentityChange((record) => {\n                const view = this._viewContainerRef.get(record.currentIndex);\n                view.context.$implicit = record.item;\n            });\n            // Update the context variables on all items.\n            const count = this._data.length;\n            let i = this._viewContainerRef.length;\n            while (i--) {\n                const view = this._viewContainerRef.get(i);\n                view.context.index = this._renderedRange.start + i;\n                view.context.count = count;\n                this._updateComputedContextProperties(view.context);\n            }\n        }\n        /** Cache the given detached view. */\n        _cacheView(view) {\n            if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n                this._templateCache.push(view);\n            }\n            else {\n                const index = this._viewContainerRef.indexOf(view);\n                // It's very unlikely that the index will ever be -1, but just in case,\n                // destroy the view on its own, otherwise destroy it through the\n                // container to ensure that all the references are removed.\n                if (index === -1) {\n                    view.destroy();\n                }\n                else {\n                    this._viewContainerRef.remove(index);\n                }\n            }\n        }\n        /** Inserts a view for a new item, either from the cache or by creating a new one. */\n        _insertViewForNewItem(index) {\n            return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n        }\n        /** Update the computed properties on the `CdkVirtualForOfContext`. */\n        _updateComputedContextProperties(context) {\n            context.first = context.index === 0;\n            context.last = context.index === context.count - 1;\n            context.even = context.index % 2 === 0;\n            context.odd = !context.even;\n        }\n        /** Creates a new embedded view and moves it to the given index */\n        _createEmbeddedViewAt(index) {\n            // Note that it's important that we insert the item directly at the proper index,\n            // rather than inserting it and the moving it in place, because if there's a directive\n            // on the same node that injects the `ViewContainerRef`, Angular will insert another\n            // comment node which can throw off the move when it's being repeated for all items.\n            return this._viewContainerRef.createEmbeddedView(this._template, {\n                $implicit: null,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false\n            }, index);\n        }\n        /** Inserts a recycled view from the cache at the given index. */\n        _insertViewFromCache(index) {\n            const cachedView = this._templateCache.pop();\n            if (cachedView) {\n                this._viewContainerRef.insert(cachedView, index);\n            }\n            return cachedView || null;\n        }\n        /** Detaches the embedded view at the given index. */\n        _detachView(index) {\n            return this._viewContainerRef.detach(index);\n        }\n    }\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n    CdkVirtualForOf.ctorParameters = () => [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: IterableDiffers },\n        { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n        { type: NgZone }\n    ];\n    CdkVirtualForOf.propDecorators = {\n        cdkVirtualForOf: [{ type: Input }],\n        cdkVirtualForTrackBy: [{ type: Input }],\n        cdkVirtualForTemplate: [{ type: Input }],\n        cdkVirtualForTemplateCacheSize: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n    return CdkVirtualForOf;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet CdkScrollableModule = /** @class */ (() => {\n    class CdkScrollableModule {\n    }\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n    return CdkScrollableModule;\n})();\nlet ScrollingModule = /** @class */ (() => {\n    class ScrollingModule {\n    }\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n    return ScrollingModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","/**\n * @license Angular v10.0.1\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor {\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * @description\n         * The registered callback function called when an input event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * @description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * @description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get validator() {\n        return unimplemented();\n    }\n    /**\n     * @description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get asyncValidator() {\n        return unimplemented();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            return control.value.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            return hasValidLength(control.value) && control.value.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        let regex;\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    static compose(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            const observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        };\n    }\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(v => v(control));\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(v => v(control));\n}\nfunction _mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeValidator(validator) {\n    if (!!validator.validate) {\n        return (c) => validator.validate(c);\n    }\n    else {\n        return validator;\n    }\n}\nfunction normalizeAsyncValidator(validator) {\n    if (!!validator.validate) {\n        return (c) => validator.validate(c);\n    }\n    else {\n        return validator;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor {\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = () => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive is initialized. For internal use only.\n     */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * @description\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    _throwNameError() {\n        throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * @description\n     * Sets the \"value\" property on one or of more\n     * of the select's options.\n     *\n     * @param value The value\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (_) => {\n            const selected = [];\n            if (_.selectedOptions !== undefined) {\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                const options = _.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n}\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n    dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\nfunction removeDir(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\nfunction coerceToValidator(validatorOrOpts) {\n    const validator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts;\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    const origAsyncValidator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator;\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validator The function that determines the synchronous validity of this control.\n     * @param asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((errors) => this.setErrors(errors, { emitEvent }));\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = (ɵ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /**\n     * @description\n     * Lifecycle method called after the view is initialized. For internal use only.\n     */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /** @internal */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    }\n    /**\n     * @description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * The synchronous validators registered with this group.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * The async validators registered with this group.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = (ɵ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You then access the control using the directive's `control` property, but\n * most properties used (like `valid` and `dirty`) fall through to the control anyway for direct\n * access. See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is\n * used within a custom form component, and the name `@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal\n     * use only.\n     */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise$1.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        removeDir(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir.control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(() => this._updateDomValue());\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(() => { });\n        this._oldForm = this.form;\n    }\n    _updateValidators() {\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    }\n    _checkFormPresent() {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     *\n     * @throws If the directive does not have a valid parent.\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * @description\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    _checkParentType() {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @description\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, { required: [{\n            type: Input\n        }] }); })();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * @description\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @description\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], null, { email: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator {\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value meets a minimum length\n     * requirement. Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], null, { minlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator {\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value exceeds\n     * the maximum length requirement.\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], null, { maxlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator {\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value matches the\n     * the pattern requirement.\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.pattern(this.pattern);\n    }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], null, { pattern: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    /**\n     * @description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     */\n    group(controlsConfig, options = null) {\n        const controls = this._reduceControls(controlsConfig);\n        let validators = null;\n        let asyncValidators = null;\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controlsConfig) {\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /** @internal */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            const value = controlConfig[0];\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.1');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nlet MatDivider = /** @class */ (() => {\n    class MatDivider {\n        constructor() {\n            this._vertical = false;\n            this._inset = false;\n        }\n        /** Whether the divider is vertically aligned. */\n        get vertical() { return this._vertical; }\n        set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n        /** Whether the divider is an inset divider. */\n        get inset() { return this._inset; }\n        set inset(value) { this._inset = coerceBooleanProperty(value); }\n    }\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatDivider.propDecorators = {\n        vertical: [{ type: Input }],\n        inset: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n    return MatDivider;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatDividerModule = /** @class */ (() => {\n    class MatDividerModule {\n    }\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n    return MatDividerModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/** Single error message to be shown underneath the form field. */\nlet MatError = /** @class */ (() => {\n    class MatError {\n        constructor() {\n            this.id = `mat-error-${nextUniqueId++}`;\n        }\n    }\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\n    MatError.propDecorators = {\n        id: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n    return MatError;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nlet MatFormFieldControl = /** @class */ (() => {\n    class MatFormFieldControl {\n    }\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n    return MatFormFieldControl;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/** Hint text to be shown underneath the form field control. */\nlet MatHint = /** @class */ (() => {\n    class MatHint {\n        constructor() {\n            /** Whether to align the hint label at the start or end of the line. */\n            this.align = 'start';\n            /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n            this.id = `mat-hint-${nextUniqueId$1++}`;\n        }\n    }\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\n    MatHint.propDecorators = {\n        align: [{ type: Input }],\n        id: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n    return MatHint;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nlet MatLabel = /** @class */ (() => {\n    class MatLabel {\n    }\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n    return MatLabel;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nlet MatPlaceholder = /** @class */ (() => {\n    class MatPlaceholder {\n    }\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n    return MatPlaceholder;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Prefix to be placed in front of the form field. */\nlet MatPrefix = /** @class */ (() => {\n    class MatPrefix {\n    }\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n    return MatPrefix;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Suffix to be placed at the end of the form field. */\nlet MatSuffix = /** @class */ (() => {\n    class MatSuffix {\n    }\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n    return MatSuffix;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nlet MatFormField = /** @class */ (() => {\n    class MatFormField extends _MatFormFieldMixinBase {\n        constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n            super(_elementRef);\n            this._elementRef = _elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._dir = _dir;\n            this._defaults = _defaults;\n            this._platform = _platform;\n            this._ngZone = _ngZone;\n            /**\n             * Whether the outline gap needs to be calculated\n             * immediately on the next change detection run.\n             */\n            this._outlineGapCalculationNeededImmediately = false;\n            /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n            this._outlineGapCalculationNeededOnStable = false;\n            this._destroyed = new Subject();\n            /** Override for the logic that disables the label animation in certain cases. */\n            this._showAlwaysAnimate = false;\n            /** State of the mat-hint and mat-error animations. */\n            this._subscriptAnimationState = '';\n            this._hintLabel = '';\n            // Unique id for the hint label.\n            this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n            // Unique id for the internal form field label.\n            this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n            this._labelOptions = labelOptions ? labelOptions : {};\n            this.floatLabel = this._getDefaultFloatLabelState();\n            this._animationsEnabled = _animationMode !== 'NoopAnimations';\n            // Set the default through here so we invoke the setter on the first run.\n            this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n            this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n                _defaults.hideRequiredMarker : false;\n        }\n        /** The form-field appearance style. */\n        get appearance() { return this._appearance; }\n        set appearance(value) {\n            const oldValue = this._appearance;\n            this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n            if (this._appearance === 'outline' && oldValue !== value) {\n                this._outlineGapCalculationNeededOnStable = true;\n            }\n        }\n        /** Whether the required marker should be hidden. */\n        get hideRequiredMarker() { return this._hideRequiredMarker; }\n        set hideRequiredMarker(value) {\n            this._hideRequiredMarker = coerceBooleanProperty(value);\n        }\n        /** Whether the floating label should always float or not. */\n        get _shouldAlwaysFloat() {\n            return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n        }\n        /** Whether the label can float or not. */\n        get _canLabelFloat() { return this.floatLabel !== 'never'; }\n        /** Text for the form field hint. */\n        get hintLabel() { return this._hintLabel; }\n        set hintLabel(value) {\n            this._hintLabel = value;\n            this._processHints();\n        }\n        /**\n         * Whether the label should always float, never float or float as the user types.\n         *\n         * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n         * way to make the floating label emulate the behavior of a standard input placeholder. However\n         * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n         * appearances the `never` option has been disabled in favor of just using the placeholder.\n         */\n        get floatLabel() {\n            return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n        }\n        set floatLabel(value) {\n            if (value !== this._floatLabel) {\n                this._floatLabel = value || this._getDefaultFloatLabelState();\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        get _control() {\n            // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n            //  We should clean this up once Ivy is the default renderer.\n            return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n        }\n        set _control(value) {\n            this._explicitFormFieldControl = value;\n        }\n        get _labelChild() {\n            return this._labelChildNonStatic || this._labelChildStatic;\n        }\n        /**\n         * Gets an ElementRef for the element that a overlay attached to the form-field should be\n         * positioned relative to.\n         */\n        getConnectedOverlayOrigin() {\n            return this._connectionContainerRef || this._elementRef;\n        }\n        ngAfterContentInit() {\n            this._validateControlChild();\n            const control = this._control;\n            if (control.controlType) {\n                this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n            }\n            // Subscribe to changes in the child control state in order to update the form field UI.\n            control.stateChanges.pipe(startWith(null)).subscribe(() => {\n                this._validatePlaceholders();\n                this._syncDescribedByIds();\n                this._changeDetectorRef.markForCheck();\n            });\n            // Run change detection if the value changes.\n            if (control.ngControl && control.ngControl.valueChanges) {\n                control.ngControl.valueChanges\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._changeDetectorRef.markForCheck());\n            }\n            // Note that we have to run outside of the `NgZone` explicitly,\n            // in order to avoid throwing users into an infinite loop\n            // if `zone-patch-rxjs` is included.\n            this._ngZone.runOutsideAngular(() => {\n                this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n                    if (this._outlineGapCalculationNeededOnStable) {\n                        this.updateOutlineGap();\n                    }\n                });\n            });\n            // Run change detection and update the outline if the suffix or prefix changes.\n            merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._changeDetectorRef.markForCheck();\n            });\n            // Re-validate when the number of hints changes.\n            this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n                this._processHints();\n                this._changeDetectorRef.markForCheck();\n            });\n            // Update the aria-described by when the number of errors changes.\n            this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n                this._syncDescribedByIds();\n                this._changeDetectorRef.markForCheck();\n            });\n            if (this._dir) {\n                this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                    if (typeof requestAnimationFrame === 'function') {\n                        this._ngZone.runOutsideAngular(() => {\n                            requestAnimationFrame(() => this.updateOutlineGap());\n                        });\n                    }\n                    else {\n                        this.updateOutlineGap();\n                    }\n                });\n            }\n        }\n        ngAfterContentChecked() {\n            this._validateControlChild();\n            if (this._outlineGapCalculationNeededImmediately) {\n                this.updateOutlineGap();\n            }\n        }\n        ngAfterViewInit() {\n            // Avoid animations on load.\n            this._subscriptAnimationState = 'enter';\n            this._changeDetectorRef.detectChanges();\n        }\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /** Determines whether a class from the NgControl should be forwarded to the host element. */\n        _shouldForward(prop) {\n            const ngControl = this._control ? this._control.ngControl : null;\n            return ngControl && ngControl[prop];\n        }\n        _hasPlaceholder() {\n            return !!(this._control && this._control.placeholder || this._placeholderChild);\n        }\n        _hasLabel() {\n            return !!this._labelChild;\n        }\n        _shouldLabelFloat() {\n            return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n        }\n        _hideControlPlaceholder() {\n            // In the legacy appearance the placeholder is promoted to a label if no label is given.\n            return this.appearance === 'legacy' && !this._hasLabel() ||\n                this._hasLabel() && !this._shouldLabelFloat();\n        }\n        _hasFloatingLabel() {\n            // In the legacy appearance the placeholder is promoted to a label if no label is given.\n            return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n        }\n        /** Determines whether to display hints or errors. */\n        _getDisplayedMessages() {\n            return (this._errorChildren && this._errorChildren.length > 0 &&\n                this._control.errorState) ? 'error' : 'hint';\n        }\n        /** Animates the placeholder up and locks it in position. */\n        _animateAndLockLabel() {\n            if (this._hasFloatingLabel() && this._canLabelFloat) {\n                // If animations are disabled, we shouldn't go in here,\n                // because the `transitionend` will never fire.\n                if (this._animationsEnabled && this._label) {\n                    this._showAlwaysAnimate = true;\n                    fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                        this._showAlwaysAnimate = false;\n                    });\n                }\n                this.floatLabel = 'always';\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n         * or child element with the `mat-placeholder` directive).\n         */\n        _validatePlaceholders() {\n            if (this._control.placeholder && this._placeholderChild) {\n                throw getMatFormFieldPlaceholderConflictError();\n            }\n        }\n        /** Does any extra processing that is required when handling the hints. */\n        _processHints() {\n            this._validateHints();\n            this._syncDescribedByIds();\n        }\n        /**\n         * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n         * attribute being considered as `align=\"start\"`.\n         */\n        _validateHints() {\n            if (this._hintChildren) {\n                let startHint;\n                let endHint;\n                this._hintChildren.forEach((hint) => {\n                    if (hint.align === 'start') {\n                        if (startHint || this.hintLabel) {\n                            throw getMatFormFieldDuplicatedHintError('start');\n                        }\n                        startHint = hint;\n                    }\n                    else if (hint.align === 'end') {\n                        if (endHint) {\n                            throw getMatFormFieldDuplicatedHintError('end');\n                        }\n                        endHint = hint;\n                    }\n                });\n            }\n        }\n        /** Gets the default float label state. */\n        _getDefaultFloatLabelState() {\n            return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n        }\n        /**\n         * Sets the list of element IDs that describe the child control. This allows the control to update\n         * its `aria-describedby` attribute accordingly.\n         */\n        _syncDescribedByIds() {\n            if (this._control) {\n                let ids = [];\n                if (this._getDisplayedMessages() === 'hint') {\n                    const startHint = this._hintChildren ?\n                        this._hintChildren.find(hint => hint.align === 'start') : null;\n                    const endHint = this._hintChildren ?\n                        this._hintChildren.find(hint => hint.align === 'end') : null;\n                    if (startHint) {\n                        ids.push(startHint.id);\n                    }\n                    else if (this._hintLabel) {\n                        ids.push(this._hintLabelId);\n                    }\n                    if (endHint) {\n                        ids.push(endHint.id);\n                    }\n                }\n                else if (this._errorChildren) {\n                    ids = this._errorChildren.map(error => error.id);\n                }\n                this._control.setDescribedByIds(ids);\n            }\n        }\n        /** Throws an error if the form field's control is missing. */\n        _validateControlChild() {\n            if (!this._control) {\n                throw getMatFormFieldMissingControlError();\n            }\n        }\n        /**\n         * Updates the width and position of the gap in the outline. Only relevant for the outline\n         * appearance.\n         */\n        updateOutlineGap() {\n            const labelEl = this._label ? this._label.nativeElement : null;\n            if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n                !labelEl.textContent.trim()) {\n                return;\n            }\n            if (!this._platform.isBrowser) {\n                // getBoundingClientRect isn't available on the server.\n                return;\n            }\n            // If the element is not present in the DOM, the outline gap will need to be calculated\n            // the next time it is checked and in the DOM.\n            if (!this._isAttachedToDOM()) {\n                this._outlineGapCalculationNeededImmediately = true;\n                return;\n            }\n            let startWidth = 0;\n            let gapWidth = 0;\n            const container = this._connectionContainerRef.nativeElement;\n            const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n            const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n            if (this._label && this._label.nativeElement.children.length) {\n                const containerRect = container.getBoundingClientRect();\n                // If the container's width and height are zero, it means that the element is\n                // invisible and we can't calculate the outline gap. Mark the element as needing\n                // to be checked the next time the zone stabilizes. We can't do this immediately\n                // on the next change detection, because even if the element becomes visible,\n                // the `ClientRect` won't be reclaculated immediately. We reset the\n                // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n                if (containerRect.width === 0 && containerRect.height === 0) {\n                    this._outlineGapCalculationNeededOnStable = true;\n                    this._outlineGapCalculationNeededImmediately = false;\n                    return;\n                }\n                const containerStart = this._getStartEnd(containerRect);\n                const labelChildren = labelEl.children;\n                const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n                let labelWidth = 0;\n                for (let i = 0; i < labelChildren.length; i++) {\n                    labelWidth += labelChildren[i].offsetWidth;\n                }\n                startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n                gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n            }\n            for (let i = 0; i < startEls.length; i++) {\n                startEls[i].style.width = `${startWidth}px`;\n            }\n            for (let i = 0; i < gapEls.length; i++) {\n                gapEls[i].style.width = `${gapWidth}px`;\n            }\n            this._outlineGapCalculationNeededOnStable =\n                this._outlineGapCalculationNeededImmediately = false;\n        }\n        /** Gets the start end of the rect considering the current directionality. */\n        _getStartEnd(rect) {\n            return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n        }\n        /** Checks whether the form field is attached to the DOM. */\n        _isAttachedToDOM() {\n            const element = this._elementRef.nativeElement;\n            if (element.getRootNode) {\n                const rootNode = element.getRootNode();\n                // If the element is inside the DOM the root node will be either the document\n                // or the closest shadow root, otherwise it'll be the element itself.\n                return rootNode && rootNode !== element;\n            }\n            // Otherwise fall back to checking if it's in the document. This doesn't account for\n            // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n            return document.documentElement.contains(element);\n        }\n    }\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n    MatFormField.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n        { type: Platform },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatFormField.propDecorators = {\n        appearance: [{ type: Input }],\n        hideRequiredMarker: [{ type: Input }],\n        hintLabel: [{ type: Input }],\n        floatLabel: [{ type: Input }],\n        underlineRef: [{ type: ViewChild, args: ['underline',] }],\n        _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n        _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n        _label: [{ type: ViewChild, args: ['label',] }],\n        _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n        _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n        _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n        _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n        _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n        _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n        _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n        _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n        _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\n    return MatFormField;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatFormFieldModule = /** @class */ (() => {\n    class MatFormFieldModule {\n    }\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n    return MatFormFieldModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nlet MatSelectTrigger = /** @class */ (() => {\n    class MatSelectTrigger {\n    }\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\n    return MatSelectTrigger;\n})();\nlet MatSelect = /** @class */ (() => {\n    class MatSelect extends _MatSelectMixinBase {\n        constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n            super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n            this._viewportRuler = _viewportRuler;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._ngZone = _ngZone;\n            this._dir = _dir;\n            this._parentFormField = _parentFormField;\n            this.ngControl = ngControl;\n            this._liveAnnouncer = _liveAnnouncer;\n            /** Whether or not the overlay panel is open. */\n            this._panelOpen = false;\n            /** Whether filling out the select is required in the form. */\n            this._required = false;\n            /** The scroll position of the overlay panel, calculated to center the selected option. */\n            this._scrollTop = 0;\n            /** Whether the component is in multiple selection mode. */\n            this._multiple = false;\n            /** Comparison function to specify which option is displayed. Defaults to object equality. */\n            this._compareWith = (o1, o2) => o1 === o2;\n            /** Unique id for this input. */\n            this._uid = `mat-select-${nextUniqueId++}`;\n            /** Emits whenever the component is destroyed. */\n            this._destroy = new Subject();\n            /** The cached font-size of the trigger element. */\n            this._triggerFontSize = 0;\n            /** `View -> model callback called when value changes` */\n            this._onChange = () => { };\n            /** `View -> model callback called when select has been touched` */\n            this._onTouched = () => { };\n            /** The IDs of child options to be passed to the aria-owns attribute. */\n            this._optionIds = '';\n            /** The value of the select panel's transform-origin property. */\n            this._transformOrigin = 'top';\n            /** Emits when the panel element is finished transforming in. */\n            this._panelDoneAnimatingStream = new Subject();\n            /**\n             * The y-offset of the overlay panel in relation to the trigger's top start corner.\n             * This must be adjusted to align the selected option text over the trigger text.\n             * when the panel opens. Will change based on the y-position of the selected option.\n             */\n            this._offsetY = 0;\n            /**\n             * This position config ensures that the top \"start\" corner of the overlay\n             * is aligned with with the top \"start\" of the origin by default (overlapping\n             * the trigger completely). If the panel cannot fit below the trigger, it\n             * will fall back to a position above the trigger.\n             */\n            this._positions = [\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'bottom',\n                },\n            ];\n            /** Whether the component is disabling centering of the active option over the trigger. */\n            this._disableOptionCentering = false;\n            this._focused = false;\n            /** A name for this control that can be used by `mat-form-field`. */\n            this.controlType = 'mat-select';\n            /** Aria label of the select. If not specified, the placeholder will be used as label. */\n            this.ariaLabel = '';\n            /** Combined stream of all of the child options' change events. */\n            this.optionSelectionChanges = defer(() => {\n                const options = this.options;\n                if (options) {\n                    return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n                }\n                return this._ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n            });\n            /** Event emitted when the select panel has been toggled. */\n            this.openedChange = new EventEmitter();\n            /** Event emitted when the select has been opened. */\n            this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n            /** Event emitted when the select has been closed. */\n            this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n            /** Event emitted when the selected value has been changed by the user. */\n            this.selectionChange = new EventEmitter();\n            /**\n             * Event that emits whenever the raw value of the select changes. This is here primarily\n             * to facilitate the two-way binding for the `value` input.\n             * @docs-private\n             */\n            this.valueChange = new EventEmitter();\n            if (this.ngControl) {\n                // Note: we provide the value accessor through here, instead of\n                // the `providers` to avoid running into a circular import.\n                this.ngControl.valueAccessor = this;\n            }\n            this._scrollStrategyFactory = scrollStrategyFactory;\n            this._scrollStrategy = this._scrollStrategyFactory();\n            this.tabIndex = parseInt(tabIndex) || 0;\n            // Force setter to be called in case id was not specified.\n            this.id = this.id;\n            if (defaults) {\n                if (defaults.disableOptionCentering != null) {\n                    this.disableOptionCentering = defaults.disableOptionCentering;\n                }\n                if (defaults.typeaheadDebounceInterval != null) {\n                    this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n                }\n            }\n        }\n        /** Whether the select is focused. */\n        get focused() {\n            return this._focused || this._panelOpen;\n        }\n        /** Placeholder to be shown if no value has been selected. */\n        get placeholder() { return this._placeholder; }\n        set placeholder(value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        }\n        /** Whether the component is required. */\n        get required() { return this._required; }\n        set required(value) {\n            this._required = coerceBooleanProperty(value);\n            this.stateChanges.next();\n        }\n        /** Whether the user should be allowed to select multiple options. */\n        get multiple() { return this._multiple; }\n        set multiple(value) {\n            if (this._selectionModel) {\n                throw getMatSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        }\n        /** Whether to center the active option over the trigger. */\n        get disableOptionCentering() { return this._disableOptionCentering; }\n        set disableOptionCentering(value) {\n            this._disableOptionCentering = coerceBooleanProperty(value);\n        }\n        /**\n         * Function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        get compareWith() { return this._compareWith; }\n        set compareWith(fn) {\n            if (typeof fn !== 'function') {\n                throw getMatSelectNonFunctionValueError();\n            }\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        }\n        /** Value of the select control. */\n        get value() { return this._value; }\n        set value(newValue) {\n            if (newValue !== this._value) {\n                this.writeValue(newValue);\n                this._value = newValue;\n            }\n        }\n        /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n        get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n        set typeaheadDebounceInterval(value) {\n            this._typeaheadDebounceInterval = coerceNumberProperty(value);\n        }\n        /** Unique id of the element. */\n        get id() { return this._id; }\n        set id(value) {\n            this._id = value || this._uid;\n            this.stateChanges.next();\n        }\n        ngOnInit() {\n            this._selectionModel = new SelectionModel(this.multiple);\n            this.stateChanges.next();\n            // We need `distinctUntilChanged` here, because some browsers will\n            // fire the animation end event twice for the same animation. See:\n            // https://github.com/angular/angular/issues/24084\n            this._panelDoneAnimatingStream\n                .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n                .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                }\n                else {\n                    this.openedChange.emit(false);\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n            this._viewportRuler.change()\n                .pipe(takeUntil(this._destroy))\n                .subscribe(() => {\n                if (this._panelOpen) {\n                    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n        }\n        ngAfterContentInit() {\n            this._initKeyManager();\n            this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n                event.added.forEach(option => option.select());\n                event.removed.forEach(option => option.deselect());\n            });\n            this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n        }\n        ngDoCheck() {\n            if (this.ngControl) {\n                this.updateErrorState();\n            }\n        }\n        ngOnChanges(changes) {\n            // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n            // the parent form field know to run change detection when the disabled state changes.\n            if (changes['disabled']) {\n                this.stateChanges.next();\n            }\n            if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n                this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n            }\n        }\n        ngOnDestroy() {\n            this._destroy.next();\n            this._destroy.complete();\n            this.stateChanges.complete();\n        }\n        /** Toggles the overlay panel open or closed. */\n        toggle() {\n            this.panelOpen ? this.close() : this.open();\n        }\n        /** Opens the overlay panel. */\n        open() {\n            if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n                return;\n            }\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._calculateOverlayPosition();\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n        /** Closes the overlay panel and focuses the host element. */\n        close() {\n            if (this._panelOpen) {\n                this._panelOpen = false;\n                this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n                this._changeDetectorRef.markForCheck();\n                this._onTouched();\n            }\n        }\n        /**\n         * Sets the select's value. Part of the ControlValueAccessor interface\n         * required to integrate with Angular's core forms API.\n         *\n         * @param value New value to be written to the model.\n         */\n        writeValue(value) {\n            if (this.options) {\n                this._setSelectionByValue(value);\n            }\n        }\n        /**\n         * Saves a callback function to be invoked when the select's value\n         * changes from user input. Part of the ControlValueAccessor interface\n         * required to integrate with Angular's core forms API.\n         *\n         * @param fn Callback to be triggered when the value changes.\n         */\n        registerOnChange(fn) {\n            this._onChange = fn;\n        }\n        /**\n         * Saves a callback function to be invoked when the select is blurred\n         * by the user. Part of the ControlValueAccessor interface required\n         * to integrate with Angular's core forms API.\n         *\n         * @param fn Callback to be triggered when the component has been touched.\n         */\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        /**\n         * Disables the select. Part of the ControlValueAccessor interface required\n         * to integrate with Angular's core forms API.\n         *\n         * @param isDisabled Sets whether the component is disabled.\n         */\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n        /** Whether or not the overlay panel is open. */\n        get panelOpen() {\n            return this._panelOpen;\n        }\n        /** The currently selected option. */\n        get selected() {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        }\n        /** The value displayed in the trigger. */\n        get triggerValue() {\n            if (this.empty) {\n                return '';\n            }\n            if (this._multiple) {\n                const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        }\n        /** Whether the element is in RTL mode. */\n        _isRtl() {\n            return this._dir ? this._dir.value === 'rtl' : false;\n        }\n        /** Handles all keydown events on the select. */\n        _handleKeydown(event) {\n            if (!this.disabled) {\n                this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n            }\n        }\n        /** Handles keyboard events while the select is closed. */\n        _handleClosedKeydown(event) {\n            const keyCode = event.keyCode;\n            const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n                keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n            const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n            const manager = this._keyManager;\n            // Open the select on ALT + arrow key to match the native <select>\n            if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n                ((this.multiple || event.altKey) && isArrowKey)) {\n                event.preventDefault(); // prevents the page from scrolling down when pressing space\n                this.open();\n            }\n            else if (!this.multiple) {\n                const previouslySelectedOption = this.selected;\n                if (keyCode === HOME || keyCode === END) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n                const selectedOption = this.selected;\n                // Since the value has changed, we need to announce it ourselves.\n                if (selectedOption && previouslySelectedOption !== selectedOption) {\n                    // We set a duration on the live announcement, because we want the live element to be\n                    // cleared after a while so that users can't navigate to it using the arrow keys.\n                    this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n                }\n            }\n        }\n        /** Handles keyboard events when the selected is open. */\n        _handleOpenKeydown(event) {\n            const manager = this._keyManager;\n            const keyCode = event.keyCode;\n            const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n            const isTyping = manager.isTyping();\n            if (keyCode === HOME || keyCode === END) {\n                event.preventDefault();\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n            }\n            else if (isArrowKey && event.altKey) {\n                // Close the select on ALT + arrow key to match the native <select>\n                event.preventDefault();\n                this.close();\n                // Don't do anything in this case if the user is typing,\n                // because the typing sequence can include the space key.\n            }\n            else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n                !hasModifierKey(event)) {\n                event.preventDefault();\n                manager.activeItem._selectViaInteraction();\n            }\n            else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n                event.preventDefault();\n                const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n                this.options.forEach(option => {\n                    if (!option.disabled) {\n                        hasDeselectedOptions ? option.select() : option.deselect();\n                    }\n                });\n            }\n            else {\n                const previouslyFocusedIndex = manager.activeItemIndex;\n                manager.onKeydown(event);\n                if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                    manager.activeItemIndex !== previouslyFocusedIndex) {\n                    manager.activeItem._selectViaInteraction();\n                }\n            }\n        }\n        _onFocus() {\n            if (!this.disabled) {\n                this._focused = true;\n                this.stateChanges.next();\n            }\n        }\n        /**\n         * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n         * \"blur\" to the panel when it opens, causing a false positive.\n         */\n        _onBlur() {\n            this._focused = false;\n            if (!this.disabled && !this.panelOpen) {\n                this._onTouched();\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            }\n        }\n        /**\n         * Callback that is invoked when the overlay panel has been attached.\n         */\n        _onAttached() {\n            this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n        }\n        /** Returns the theme to be used on the panel. */\n        _getPanelTheme() {\n            return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n        }\n        /** Whether the select has a value. */\n        get empty() {\n            return !this._selectionModel || this._selectionModel.isEmpty();\n        }\n        _initializeSelection() {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n                this.stateChanges.next();\n            });\n        }\n        /**\n         * Sets the selected option based on a value. If no option can be\n         * found with the designated value, the select trigger is cleared.\n         */\n        _setSelectionByValue(value) {\n            if (this.multiple && value) {\n                if (!Array.isArray(value)) {\n                    throw getMatSelectNonArrayValueError();\n                }\n                this._selectionModel.clear();\n                value.forEach((currentValue) => this._selectValue(currentValue));\n                this._sortValues();\n            }\n            else {\n                this._selectionModel.clear();\n                const correspondingOption = this._selectValue(value);\n                // Shift focus to the active item. Note that we shouldn't do this in multiple\n                // mode, because we don't know what option the user interacted with last.\n                if (correspondingOption) {\n                    this._keyManager.setActiveItem(correspondingOption);\n                }\n                else if (!this.panelOpen) {\n                    // Otherwise reset the highlighted option. Note that we only want to do this while\n                    // closed, because doing it while open can shift the user's focus unnecessarily.\n                    this._keyManager.setActiveItem(-1);\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n        /**\n         * Finds and selects and option based on its value.\n         * @returns Option that has the corresponding value.\n         */\n        _selectValue(value) {\n            const correspondingOption = this.options.find((option) => {\n                try {\n                    // Treat null as a special reset value.\n                    return option.value != null && this._compareWith(option.value, value);\n                }\n                catch (error) {\n                    if (isDevMode()) {\n                        // Notify developers of errors in their comparator.\n                        console.warn(error);\n                    }\n                    return false;\n                }\n            });\n            if (correspondingOption) {\n                this._selectionModel.select(correspondingOption);\n            }\n            return correspondingOption;\n        }\n        /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n        _initKeyManager() {\n            this._keyManager = new ActiveDescendantKeyManager(this.options)\n                .withTypeAhead(this._typeaheadDebounceInterval)\n                .withVerticalOrientation()\n                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n                .withAllowedModifierKeys(['shiftKey']);\n            this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n                if (this.panelOpen) {\n                    // Select the active item when tabbing away. This is consistent with how the native\n                    // select behaves. Note that we only want to do this in single selection mode.\n                    if (!this.multiple && this._keyManager.activeItem) {\n                        this._keyManager.activeItem._selectViaInteraction();\n                    }\n                    // Restore focus to the trigger before closing. Ensures that the focus\n                    // position won't be lost if the user got focus into the overlay.\n                    this.focus();\n                    this.close();\n                }\n            });\n            this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                }\n                else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n        }\n        /** Drops current option subscriptions and IDs and resets from scratch. */\n        _resetOptions() {\n            const changedOrDestroyed = merge(this.options.changes, this._destroy);\n            this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n                this._onSelect(event.source, event.isUserInput);\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n            // Listen to changes in the internal state of the options and react accordingly.\n            // Handles cases like the labels of the selected options changing.\n            merge(...this.options.map(option => option._stateChanges))\n                .pipe(takeUntil(changedOrDestroyed))\n                .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n            this._setOptionIds();\n        }\n        /** Invoked when an option is clicked. */\n        _onSelect(option, isUserInput) {\n            const wasSelected = this._selectionModel.isSelected(option);\n            if (option.value == null && !this._multiple) {\n                option.deselect();\n                this._selectionModel.clear();\n                this._propagateChanges(option.value);\n            }\n            else {\n                if (wasSelected !== option.selected) {\n                    option.selected ? this._selectionModel.select(option) :\n                        this._selectionModel.deselect(option);\n                }\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(option);\n                }\n                if (this.multiple) {\n                    this._sortValues();\n                    if (isUserInput) {\n                        // In case the user selected the option with their mouse, we\n                        // want to restore focus back to the trigger, in order to\n                        // prevent the select keyboard controls from clashing with\n                        // the ones from `mat-option`.\n                        this.focus();\n                    }\n                }\n            }\n            if (wasSelected !== this._selectionModel.isSelected(option)) {\n                this._propagateChanges();\n            }\n            this.stateChanges.next();\n        }\n        /** Sorts the selected values in the selected based on their order in the panel. */\n        _sortValues() {\n            if (this.multiple) {\n                const options = this.options.toArray();\n                this._selectionModel.sort((a, b) => {\n                    return this.sortComparator ? this.sortComparator(a, b, options) :\n                        options.indexOf(a) - options.indexOf(b);\n                });\n                this.stateChanges.next();\n            }\n        }\n        /** Emits change event to set the model value. */\n        _propagateChanges(fallbackValue) {\n            let valueToEmit = null;\n            if (this.multiple) {\n                valueToEmit = this.selected.map(option => option.value);\n            }\n            else {\n                valueToEmit = this.selected ? this.selected.value : fallbackValue;\n            }\n            this._value = valueToEmit;\n            this.valueChange.emit(valueToEmit);\n            this._onChange(valueToEmit);\n            this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Records option IDs to pass to the aria-owns property. */\n        _setOptionIds() {\n            this._optionIds = this.options.map(option => option.id).join(' ');\n        }\n        /**\n         * Highlights the selected item. If no option is selected, it will highlight\n         * the first item instead.\n         */\n        _highlightCorrectOption() {\n            if (this._keyManager) {\n                if (this.empty) {\n                    this._keyManager.setFirstItemActive();\n                }\n                else {\n                    this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n                }\n            }\n        }\n        /** Scrolls the active option into view. */\n        _scrollActiveOptionIntoView() {\n            const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n            const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n        /** Focuses the select element. */\n        focus(options) {\n            this._elementRef.nativeElement.focus(options);\n        }\n        /** Gets the index of the provided option in the option list. */\n        _getOptionIndex(option) {\n            return this.options.reduce((result, current, index) => {\n                if (result !== undefined) {\n                    return result;\n                }\n                return option === current ? index : undefined;\n            }, undefined);\n        }\n        /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n        _calculateOverlayPosition() {\n            const itemHeight = this._getItemHeight();\n            const items = this._getItemCount();\n            const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n            const scrollContainerHeight = items * itemHeight;\n            // The farthest the panel can be scrolled before it hits the bottom\n            const maxScroll = scrollContainerHeight - panelHeight;\n            // If no value is selected we open the popup to the first item.\n            let selectedOptionOffset = this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0]);\n            selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n            // We must maintain a scroll buffer so the selected option will be scrolled to the\n            // center of the overlay panel rather than the top.\n            const scrollBuffer = panelHeight / 2;\n            this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n            this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n            this._checkOverlayWithinViewport(maxScroll);\n        }\n        /**\n         * Calculates the scroll position of the select's overlay panel.\n         *\n         * Attempts to center the selected option in the panel. If the option is\n         * too high or too low in the panel to be scrolled to the center, it clamps the\n         * scroll position to the min or max scroll positions respectively.\n         */\n        _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n            const halfOptionHeight = itemHeight / 2;\n            // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n            // scroll container, then subtracts the scroll buffer to scroll the option down to\n            // the center of the overlay panel. Half the option height must be re-added to the\n            // scrollTop so the option is centered based on its middle, not its top edge.\n            const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n            return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n        }\n        /** Returns the aria-label of the select component. */\n        _getAriaLabel() {\n            // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n            // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n        }\n        /** Returns the aria-labelledby of the select component. */\n        _getAriaLabelledby() {\n            if (this.ariaLabelledby) {\n                return this.ariaLabelledby;\n            }\n            // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n            // computed label. `this.ariaLabel` is only the user-specified label.\n            if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n                this._getAriaLabel()) {\n                return null;\n            }\n            return this._parentFormField._labelId || null;\n        }\n        /** Determines the `aria-activedescendant` to be set on the host. */\n        _getAriaActiveDescendant() {\n            if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n                return this._keyManager.activeItem.id;\n            }\n            return null;\n        }\n        /**\n         * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text when\n         * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n         * can't be calculated until the panel has been attached, because we need to know the\n         * content width in order to constrain the panel within the viewport.\n         */\n        _calculateOverlayOffsetX() {\n            const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n            const viewportSize = this._viewportRuler.getViewportSize();\n            const isRtl = this._isRtl();\n            const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                SELECT_PANEL_PADDING_X * 2;\n            let offsetX;\n            // Adjust the offset, depending on the option padding.\n            if (this.multiple) {\n                offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n            }\n            else {\n                let selected = this._selectionModel.selected[0] || this.options.first;\n                offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n            }\n            // Invert the offset in LTR.\n            if (!isRtl) {\n                offsetX *= -1;\n            }\n            // Determine how much the select overflows on each side.\n            const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n            const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n                + (isRtl ? 0 : paddingWidth);\n            // If the element overflows on either side, reduce the offset to allow it to fit.\n            if (leftOverflow > 0) {\n                offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n            }\n            else if (rightOverflow > 0) {\n                offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n            }\n            // Set the offset directly in order to avoid having to go through change detection and\n            // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n            // blurry content in some browsers.\n            this.overlayDir.offsetX = Math.round(offsetX);\n            this.overlayDir.overlayRef.updatePosition();\n        }\n        /**\n         * Calculates the y-offset of the select's overlay panel in relation to the\n         * top start corner of the trigger. It has to be adjusted in order for the\n         * selected option to be aligned over the trigger when the panel opens.\n         */\n        _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n            const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n            let optionOffsetFromPanelTop;\n            // Disable offset if requested by user by returning 0 as value to offset\n            if (this._disableOptionCentering) {\n                return 0;\n            }\n            if (this._scrollTop === 0) {\n                optionOffsetFromPanelTop = selectedIndex * itemHeight;\n            }\n            else if (this._scrollTop === maxScroll) {\n                const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n                const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n                // The first item is partially out of the viewport. Therefore we need to calculate what\n                // portion of it is shown in the viewport and account for it in our offset.\n                let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n                // Because the panel height is longer than the height of the options alone,\n                // there is always extra padding at the top or bottom of the panel. When\n                // scrolled to the very bottom, this padding is at the top of the panel and\n                // must be added to the offset.\n                optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n            }\n            else {\n                // If the option was scrolled to the middle of the panel using a scroll buffer,\n                // its offset will be the scroll buffer minus the half height that was added to\n                // center it.\n                optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n            }\n            // The final offset is the option's offset from the top, adjusted for the height difference,\n            // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n            // The value is rounded to prevent some browsers from blurring the content.\n            return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n        }\n        /**\n         * Checks that the attempted overlay position will fit within the viewport.\n         * If it will not fit, tries to adjust the scroll position and the associated\n         * y-offset so the panel can open fully on-screen. If it still won't fit,\n         * sets the offset back to 0 to allow the fallback position to take over.\n         */\n        _checkOverlayWithinViewport(maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const viewportSize = this._viewportRuler.getViewportSize();\n            const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n            const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n            const panelHeightTop = Math.abs(this._offsetY);\n            const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n            const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n            if (panelHeightBottom > bottomSpaceAvailable) {\n                this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n            }\n            else if (panelHeightTop > topSpaceAvailable) {\n                this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n            }\n            else {\n                this._transformOrigin = this._getOriginBasedOnOption();\n            }\n        }\n        /** Adjusts the overlay panel up to fit in the viewport. */\n        _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n            // Browsers ignore fractional scroll offsets, so we need to round.\n            const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n            // Scrolls the panel up by the distance it was extending past the boundary, then\n            // adjusts the offset by that amount to move the panel up into the viewport.\n            this._scrollTop -= distanceBelowViewport;\n            this._offsetY -= distanceBelowViewport;\n            this._transformOrigin = this._getOriginBasedOnOption();\n            // If the panel is scrolled to the very top, it won't be able to fit the panel\n            // by scrolling, so set the offset to 0 to allow the fallback position to take\n            // effect.\n            if (this._scrollTop <= 0) {\n                this._scrollTop = 0;\n                this._offsetY = 0;\n                this._transformOrigin = `50% bottom 0px`;\n            }\n        }\n        /** Adjusts the overlay panel down to fit in the viewport. */\n        _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n            // Browsers ignore fractional scroll offsets, so we need to round.\n            const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n            // Scrolls the panel down by the distance it was extending past the boundary, then\n            // adjusts the offset by that amount to move the panel down into the viewport.\n            this._scrollTop += distanceAboveViewport;\n            this._offsetY += distanceAboveViewport;\n            this._transformOrigin = this._getOriginBasedOnOption();\n            // If the panel is scrolled to the very bottom, it won't be able to fit the\n            // panel by scrolling, so set the offset to 0 to allow the fallback position\n            // to take effect.\n            if (this._scrollTop >= maxScroll) {\n                this._scrollTop = maxScroll;\n                this._offsetY = 0;\n                this._transformOrigin = `50% top 0px`;\n                return;\n            }\n        }\n        /** Sets the transform origin point based on the selected option. */\n        _getOriginBasedOnOption() {\n            const itemHeight = this._getItemHeight();\n            const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n            const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n            return `50% ${originY}px 0px`;\n        }\n        /** Calculates the amount of items in the select. This includes options and group labels. */\n        _getItemCount() {\n            return this.options.length + this.optionGroups.length;\n        }\n        /** Calculates the height of the select's options. */\n        _getItemHeight() {\n            return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        setDescribedByIds(ids) {\n            this._ariaDescribedby = ids.join(' ');\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        onContainerClick() {\n            this.focus();\n            this.open();\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get shouldLabelFloat() {\n            return this._panelOpen || !this.empty;\n        }\n    }\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n    MatSelect.ctorParameters = () => [\n        { type: ViewportRuler },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: ErrorStateMatcher },\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgForm, decorators: [{ type: Optional }] },\n        { type: FormGroupDirective, decorators: [{ type: Optional }] },\n        { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n        { type: LiveAnnouncer },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n    ];\n    MatSelect.propDecorators = {\n        trigger: [{ type: ViewChild, args: ['trigger',] }],\n        panel: [{ type: ViewChild, args: ['panel',] }],\n        overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n        options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n        optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n        panelClass: [{ type: Input }],\n        customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n        placeholder: [{ type: Input }],\n        required: [{ type: Input }],\n        multiple: [{ type: Input }],\n        disableOptionCentering: [{ type: Input }],\n        compareWith: [{ type: Input }],\n        value: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        errorStateMatcher: [{ type: Input }],\n        typeaheadDebounceInterval: [{ type: Input }],\n        sortComparator: [{ type: Input }],\n        id: [{ type: Input }],\n        openedChange: [{ type: Output }],\n        _openedStream: [{ type: Output, args: ['opened',] }],\n        _closedStream: [{ type: Output, args: ['closed',] }],\n        selectionChange: [{ type: Output }],\n        valueChange: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\n    return MatSelect;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatSelectModule = /** @class */ (() => {\n    class MatSelectModule {\n    }\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n    return MatSelectModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {UnitData} from '../../interfaces/warhammer-interfaces';\nimport {WarHammerService} from '../../services/warhammer-service';\n\n@Component({\n  selector: 'model-display-component',\n  templateUrl: './model-display.component.html',\n  styleUrls: ['./model-display.component.scss']\n})\nexport class ModelDisplayComponent {\n\n  @Input()\n  public unitList: Array<UnitData>;\n\n  @Input()\n  public unitType: string;\n\n  @Output()\n  public removeUnit: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output()\n  public changeUnitSize: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(public warhammerService: WarHammerService) {}\n}\n","<mat-card *ngFor=\"let unit of unitList\" class=\"unit-display\">\n  <div>\n    <mat-card-title>{{unit.name}}</mat-card-title>\n    <mat-card-subtitle>Total Points: {{warhammerService.getTotalPoints(unit)}}</mat-card-subtitle>\n    <mat-card-subtitle>Squad Size: {{unit.squadSize}}</mat-card-subtitle>\n  </div>\n  <div>\n    <div *ngIf=\"unit.maxSquadSize !== unit.minSquadSize\">\n      <button\n              [disabled]=\"unit.squadSize === unit.maxSquadSize\"\n              mat-raised-button\n              color=\"primary\"\n              (click)=\"changeUnitSize.emit({type: unitType, value: unit, direction: true})\"\n      >\n        +\n      </button>\n      <button\n              [disabled]=\"unit.squadSize === unit.minSquadSize\"\n              mat-raised-button\n              color=\"primary\"\n              (click)=\"changeUnitSize.emit({type: unitType, value: unit, direction: false})\">\n        -\n      </button>\n    </div>\n    <button\n            mat-raised-button\n            color=\"warn\"\n            (click)=\"removeUnit.emit({type: unitType, value:unit})\"\n    >\n      Remove\n    </button>\n  </div>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {forkJoin} from 'rxjs';\nimport {ArmyList, UnitData, WarGearItem} from '../../../interfaces/warhammer-interfaces';\nimport {WarHammerService} from '../../../services/warhammer-service';\n\n@Component({\n  selector: 'home-component',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public rangedWeapons: Array<WarGearItem>;\n  public meleeWeapons: Array<WarGearItem>;\n  public equipment: Array<WarGearItem>;\n  public spaceMarineHq: Array<UnitData>;\n  public spaceMarineTroops: Array<UnitData>;\n  public armyList: ArmyList = {\n    hqChoices: [],\n    eliteChoices: [],\n    troopChoices: [],\n    fastAttackChoices: [],\n    heavyChoices: [],\n    flyerChoices: [],\n    transportChoices: []\n  };\n  public totalArmyPoints: number;\n\n  constructor(private http: HttpClient, public warhammerService: WarHammerService) {\n  }\n\n  public ngOnInit() {\n    const join = forkJoin([\n      this.http.get('/assets/points-lists/ranged-weapons.json'),\n      this.http.get('/assets/points-lists/melee-weapons.json'),\n      this.http.get('/assets/points-lists/equipment.json'),\n      this.http.get('/assets/points-lists/space-marine-hq.json'),\n      this.http.get('/assets/points-lists/space-marine-troops.json')\n    ]);\n    join.subscribe((\n      [\n        rangedWeapons,\n        meleeWeapons,\n        equipment,\n        spaceMarineHq,\n        spaceMarineTroops\n      ]: [\n        Array<WarGearItem>,\n        Array<WarGearItem>,\n        Array<WarGearItem>,\n        Array<UnitData>,\n        Array<UnitData>\n      ]\n    ) => {\n      this.rangedWeapons = rangedWeapons;\n      this.meleeWeapons = meleeWeapons;\n      this.equipment = equipment;\n      this.spaceMarineHq = this.getData(spaceMarineHq);\n      this.spaceMarineTroops = this.getData(spaceMarineTroops);\n    });\n  }\n\n  public getData(unitType: Array<UnitData>): Array<UnitData> {\n    return unitType.map((model) => {\n      const gearOptions = ['rangedGear', 'meleeGear', 'equipment'];\n      const dataOptions = ['rangedWeapons', 'meleeWeapons', 'equipment'];\n      gearOptions.forEach((option, index) => {\n        if (model[option].length) {\n          model[option] = model[option].map((potentialItem) => {\n            potentialItem.data = this[dataOptions[index]].find((item) => item.id === potentialItem.id);\n            return potentialItem;\n          });\n        }\n      });\n      return model;\n    }).sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  public addUnit(type: string, value: UnitData): void {\n    // give each item in the armylist  unique ID so that when an item is removed\n    // the correct one is removed instead of which ever comes first in the array\n    const newValue = Object.assign({}, value);\n    newValue.listId = this.armyList[type].length > 0 ? this.armyList[type][this.armyList[type].length - 1].listId + 1 : 1;\n    this.armyList[type].push(newValue);\n    this.totalArmyPoints = this.warhammerService.updateArmyTotal(this.armyList);\n  }\n\n  public removeUnit(event: {type: string, value: UnitData}): void {\n    const {type, value} = event;\n    const oldIndex = this.armyList[type].findIndex((item: UnitData) => item.listId === value.listId);\n    this.armyList[type].splice(oldIndex, 1);\n    this.totalArmyPoints = this.warhammerService.updateArmyTotal(this.armyList);\n  }\n\n  public changeUnitSize(event: {type: string, value: UnitData, direction: boolean}): void {\n    const {type, value, direction} = event;\n    this.armyList[type].forEach((item: UnitData) => {\n      if (item.listId === value.listId) {\n        direction ? item.squadSize ++ : item.squadSize --;\n        return;\n      }\n    });\n    this.totalArmyPoints = this.warhammerService.updateArmyTotal(this.armyList);\n  }\n}\n","Total Army: {{totalArmyPoints}}\n\n<h3>HQ Choices</h3>\n<mat-form-field appearance=\"fill\">\n  <mat-label>HQ Choices</mat-label>\n  <mat-select #hqSelector>\n    <mat-select-trigger>{{hqSelector.value?.name}}</mat-select-trigger>\n    <mat-option *ngFor=\"let hqUnit of spaceMarineHq\" [value]=\"hqUnit\">{{hqUnit.name}}</mat-option>\n  </mat-select>\n</mat-form-field>\n<button mat-raised-button color=\"primary\" (click)=\"addUnit('hqChoices', hqSelector.value)\">Add</button>\n<model-display-component\n        [unitList]=\"armyList.hqChoices\"\n        [unitType]=\"'hqChoices'\"\n        (removeUnit)=\"removeUnit($event)\"\n        (changeUnitSize)=\"changeUnitSize($event)\"\n></model-display-component>\n\n<mat-divider></mat-divider>\n\n<h3>Troop Choices</h3>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Troop Choices</mat-label>\n  <mat-select #troopSelector>\n    <mat-select-trigger>{{troopSelector.value?.name}}</mat-select-trigger>\n    <mat-option *ngFor=\"let troopUnit of spaceMarineTroops\" [value]=\"troopUnit\">{{troopUnit.name}}</mat-option>\n  </mat-select>\n</mat-form-field>\n<button mat-raised-button color=\"primary\" (click)=\"addUnit('troopChoices', troopSelector.value)\">Add</button>\n<model-display-component\n        [unitList]=\"armyList.troopChoices\"\n        [unitType]=\"'troopChoices'\"\n        (removeUnit)=\"removeUnit($event)\"\n        (changeUnitSize)=\"changeUnitSize($event)\"\n></model-display-component>\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {HomeComponent} from './home-component/home.component';\nimport {CommonModule} from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ModelDisplayComponent} from '../../components/model-display/model-display.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatDividerModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomeComponent\n      }\n    ])\n  ],\n  declarations: [\n    HomeComponent,\n    ModelDisplayComponent\n  ]\n})\nexport class HomeModule {}\n"]}